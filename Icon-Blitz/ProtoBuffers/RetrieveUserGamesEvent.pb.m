// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "RetrieveUserGamesEvent.pb.h"

@implementation RetrieveUserGamesEventRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [RetrieveUserGamesEventRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [TriviaGameFormatRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface RetrieveUserGamesRequestProto ()
@property (retain) BasicUserProto* sender;
@property int64_t timeForCompletedGames;
@end

@implementation RetrieveUserGamesRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasTimeForCompletedGames {
  return !!hasTimeForCompletedGames_;
}
- (void) setHasTimeForCompletedGames:(BOOL) value {
  hasTimeForCompletedGames_ = !!value;
}
@synthesize timeForCompletedGames;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [BasicUserProto defaultInstance];
    self.timeForCompletedGames = 0L;
  }
  return self;
}
static RetrieveUserGamesRequestProto* defaultRetrieveUserGamesRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveUserGamesRequestProto class]) {
    defaultRetrieveUserGamesRequestProtoInstance = [[RetrieveUserGamesRequestProto alloc] init];
  }
}
+ (RetrieveUserGamesRequestProto*) defaultInstance {
  return defaultRetrieveUserGamesRequestProtoInstance;
}
- (RetrieveUserGamesRequestProto*) defaultInstance {
  return defaultRetrieveUserGamesRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasTimeForCompletedGames) {
    [output writeInt64:2 value:self.timeForCompletedGames];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasTimeForCompletedGames) {
    size += computeInt64Size(2, self.timeForCompletedGames);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetrieveUserGamesRequestProto*) parseFromData:(NSData*) data {
  return (RetrieveUserGamesRequestProto*)[[[RetrieveUserGamesRequestProto builder] mergeFromData:data] build];
}
+ (RetrieveUserGamesRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveUserGamesRequestProto*)[[[RetrieveUserGamesRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveUserGamesRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveUserGamesRequestProto*)[[[RetrieveUserGamesRequestProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveUserGamesRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveUserGamesRequestProto*)[[[RetrieveUserGamesRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveUserGamesRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveUserGamesRequestProto*)[[[RetrieveUserGamesRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveUserGamesRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveUserGamesRequestProto*)[[[RetrieveUserGamesRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveUserGamesRequestProto_Builder*) builder {
  return [[[RetrieveUserGamesRequestProto_Builder alloc] init] autorelease];
}
+ (RetrieveUserGamesRequestProto_Builder*) builderWithPrototype:(RetrieveUserGamesRequestProto*) prototype {
  return [[RetrieveUserGamesRequestProto builder] mergeFrom:prototype];
}
- (RetrieveUserGamesRequestProto_Builder*) builder {
  return [RetrieveUserGamesRequestProto builder];
}
@end

@interface RetrieveUserGamesRequestProto_Builder()
@property (retain) RetrieveUserGamesRequestProto* result;
@end

@implementation RetrieveUserGamesRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetrieveUserGamesRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveUserGamesRequestProto_Builder*) clear {
  self.result = [[[RetrieveUserGamesRequestProto alloc] init] autorelease];
  return self;
}
- (RetrieveUserGamesRequestProto_Builder*) clone {
  return [RetrieveUserGamesRequestProto builderWithPrototype:result];
}
- (RetrieveUserGamesRequestProto*) defaultInstance {
  return [RetrieveUserGamesRequestProto defaultInstance];
}
- (RetrieveUserGamesRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveUserGamesRequestProto*) buildPartial {
  RetrieveUserGamesRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetrieveUserGamesRequestProto_Builder*) mergeFrom:(RetrieveUserGamesRequestProto*) other {
  if (other == [RetrieveUserGamesRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasTimeForCompletedGames) {
    [self setTimeForCompletedGames:other.timeForCompletedGames];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveUserGamesRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveUserGamesRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BasicUserProto_Builder* subBuilder = [BasicUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setTimeForCompletedGames:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (BasicUserProto*) sender {
  return result.sender;
}
- (RetrieveUserGamesRequestProto_Builder*) setSender:(BasicUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveUserGamesRequestProto_Builder*) setSenderBuilder:(BasicUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveUserGamesRequestProto_Builder*) mergeSender:(BasicUserProto*) value {
  if (result.hasSender &&
      result.sender != [BasicUserProto defaultInstance]) {
    result.sender =
      [[[BasicUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveUserGamesRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [BasicUserProto defaultInstance];
  return self;
}
- (BOOL) hasTimeForCompletedGames {
  return result.hasTimeForCompletedGames;
}
- (int64_t) timeForCompletedGames {
  return result.timeForCompletedGames;
}
- (RetrieveUserGamesRequestProto_Builder*) setTimeForCompletedGames:(int64_t) value {
  result.hasTimeForCompletedGames = YES;
  result.timeForCompletedGames = value;
  return self;
}
- (RetrieveUserGamesRequestProto_Builder*) clearTimeForCompletedGames {
  result.hasTimeForCompletedGames = NO;
  result.timeForCompletedGames = 0L;
  return self;
}
@end

@interface RetrieveUserGamesResponseProto ()
@property (retain) BasicUserProto* sender;
@property (retain) NSMutableArray* mutableCompletedGamesList;
@property (retain) NSMutableArray* mutableMyTurnList;
@property (retain) NSMutableArray* mutableNotMyTurnList;
@property (retain) NSMutableArray* mutablePictureNamesList;
@property RetrieveUserGamesResponseProto_RetrieveUserGamesStatus status;
@end

@implementation RetrieveUserGamesResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableCompletedGamesList;
@synthesize mutableMyTurnList;
@synthesize mutableNotMyTurnList;
@synthesize mutablePictureNamesList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  self.mutableCompletedGamesList = nil;
  self.mutableMyTurnList = nil;
  self.mutableNotMyTurnList = nil;
  self.mutablePictureNamesList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [BasicUserProto defaultInstance];
    self.status = RetrieveUserGamesResponseProto_RetrieveUserGamesStatusSuccess;
  }
  return self;
}
static RetrieveUserGamesResponseProto* defaultRetrieveUserGamesResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveUserGamesResponseProto class]) {
    defaultRetrieveUserGamesResponseProtoInstance = [[RetrieveUserGamesResponseProto alloc] init];
  }
}
+ (RetrieveUserGamesResponseProto*) defaultInstance {
  return defaultRetrieveUserGamesResponseProtoInstance;
}
- (RetrieveUserGamesResponseProto*) defaultInstance {
  return defaultRetrieveUserGamesResponseProtoInstance;
}
- (NSArray*) completedGamesList {
  return mutableCompletedGamesList;
}
- (GameResultsProto*) completedGamesAtIndex:(int32_t) index {
  id value = [mutableCompletedGamesList objectAtIndex:index];
  return value;
}
- (NSArray*) myTurnList {
  return mutableMyTurnList;
}
- (OngoingGameProto*) myTurnAtIndex:(int32_t) index {
  id value = [mutableMyTurnList objectAtIndex:index];
  return value;
}
- (NSArray*) notMyTurnList {
  return mutableNotMyTurnList;
}
- (OngoingGameProto*) notMyTurnAtIndex:(int32_t) index {
  id value = [mutableNotMyTurnList objectAtIndex:index];
  return value;
}
- (NSArray*) pictureNamesList {
  return mutablePictureNamesList;
}
- (NSString*) pictureNamesAtIndex:(int32_t) index {
  id value = [mutablePictureNamesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (GameResultsProto* element in self.completedGamesList) {
    [output writeMessage:2 value:element];
  }
  for (OngoingGameProto* element in self.myTurnList) {
    [output writeMessage:3 value:element];
  }
  for (OngoingGameProto* element in self.notMyTurnList) {
    [output writeMessage:4 value:element];
  }
  for (NSString* element in self.mutablePictureNamesList) {
    [output writeString:5 value:element];
  }
  if (self.hasStatus) {
    [output writeEnum:6 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (GameResultsProto* element in self.completedGamesList) {
    size += computeMessageSize(2, element);
  }
  for (OngoingGameProto* element in self.myTurnList) {
    size += computeMessageSize(3, element);
  }
  for (OngoingGameProto* element in self.notMyTurnList) {
    size += computeMessageSize(4, element);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutablePictureNamesList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutablePictureNamesList.count;
  }
  if (self.hasStatus) {
    size += computeEnumSize(6, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetrieveUserGamesResponseProto*) parseFromData:(NSData*) data {
  return (RetrieveUserGamesResponseProto*)[[[RetrieveUserGamesResponseProto builder] mergeFromData:data] build];
}
+ (RetrieveUserGamesResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveUserGamesResponseProto*)[[[RetrieveUserGamesResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveUserGamesResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveUserGamesResponseProto*)[[[RetrieveUserGamesResponseProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveUserGamesResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveUserGamesResponseProto*)[[[RetrieveUserGamesResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveUserGamesResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveUserGamesResponseProto*)[[[RetrieveUserGamesResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveUserGamesResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveUserGamesResponseProto*)[[[RetrieveUserGamesResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveUserGamesResponseProto_Builder*) builder {
  return [[[RetrieveUserGamesResponseProto_Builder alloc] init] autorelease];
}
+ (RetrieveUserGamesResponseProto_Builder*) builderWithPrototype:(RetrieveUserGamesResponseProto*) prototype {
  return [[RetrieveUserGamesResponseProto builder] mergeFrom:prototype];
}
- (RetrieveUserGamesResponseProto_Builder*) builder {
  return [RetrieveUserGamesResponseProto builder];
}
@end

BOOL RetrieveUserGamesResponseProto_RetrieveUserGamesStatusIsValidValue(RetrieveUserGamesResponseProto_RetrieveUserGamesStatus value) {
  switch (value) {
    case RetrieveUserGamesResponseProto_RetrieveUserGamesStatusSuccess:
    case RetrieveUserGamesResponseProto_RetrieveUserGamesStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface RetrieveUserGamesResponseProto_Builder()
@property (retain) RetrieveUserGamesResponseProto* result;
@end

@implementation RetrieveUserGamesResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetrieveUserGamesResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveUserGamesResponseProto_Builder*) clear {
  self.result = [[[RetrieveUserGamesResponseProto alloc] init] autorelease];
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) clone {
  return [RetrieveUserGamesResponseProto builderWithPrototype:result];
}
- (RetrieveUserGamesResponseProto*) defaultInstance {
  return [RetrieveUserGamesResponseProto defaultInstance];
}
- (RetrieveUserGamesResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveUserGamesResponseProto*) buildPartial {
  RetrieveUserGamesResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetrieveUserGamesResponseProto_Builder*) mergeFrom:(RetrieveUserGamesResponseProto*) other {
  if (other == [RetrieveUserGamesResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableCompletedGamesList.count > 0) {
    if (result.mutableCompletedGamesList == nil) {
      result.mutableCompletedGamesList = [NSMutableArray array];
    }
    [result.mutableCompletedGamesList addObjectsFromArray:other.mutableCompletedGamesList];
  }
  if (other.mutableMyTurnList.count > 0) {
    if (result.mutableMyTurnList == nil) {
      result.mutableMyTurnList = [NSMutableArray array];
    }
    [result.mutableMyTurnList addObjectsFromArray:other.mutableMyTurnList];
  }
  if (other.mutableNotMyTurnList.count > 0) {
    if (result.mutableNotMyTurnList == nil) {
      result.mutableNotMyTurnList = [NSMutableArray array];
    }
    [result.mutableNotMyTurnList addObjectsFromArray:other.mutableNotMyTurnList];
  }
  if (other.mutablePictureNamesList.count > 0) {
    if (result.mutablePictureNamesList == nil) {
      result.mutablePictureNamesList = [NSMutableArray array];
    }
    [result.mutablePictureNamesList addObjectsFromArray:other.mutablePictureNamesList];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveUserGamesResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BasicUserProto_Builder* subBuilder = [BasicUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        GameResultsProto_Builder* subBuilder = [GameResultsProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCompletedGames:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        OngoingGameProto_Builder* subBuilder = [OngoingGameProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMyTurn:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        OngoingGameProto_Builder* subBuilder = [OngoingGameProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNotMyTurn:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        [self addPictureNames:[input readString]];
        break;
      }
      case 48: {
        int32_t value = [input readEnum];
        if (RetrieveUserGamesResponseProto_RetrieveUserGamesStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (BasicUserProto*) sender {
  return result.sender;
}
- (RetrieveUserGamesResponseProto_Builder*) setSender:(BasicUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) setSenderBuilder:(BasicUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveUserGamesResponseProto_Builder*) mergeSender:(BasicUserProto*) value {
  if (result.hasSender &&
      result.sender != [BasicUserProto defaultInstance]) {
    result.sender =
      [[[BasicUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [BasicUserProto defaultInstance];
  return self;
}
- (NSArray*) completedGamesList {
  if (result.mutableCompletedGamesList == nil) { return [NSArray array]; }
  return result.mutableCompletedGamesList;
}
- (GameResultsProto*) completedGamesAtIndex:(int32_t) index {
  return [result completedGamesAtIndex:index];
}
- (RetrieveUserGamesResponseProto_Builder*) replaceCompletedGamesAtIndex:(int32_t) index with:(GameResultsProto*) value {
  [result.mutableCompletedGamesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) addAllCompletedGames:(NSArray*) values {
  if (result.mutableCompletedGamesList == nil) {
    result.mutableCompletedGamesList = [NSMutableArray array];
  }
  [result.mutableCompletedGamesList addObjectsFromArray:values];
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) clearCompletedGamesList {
  result.mutableCompletedGamesList = nil;
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) addCompletedGames:(GameResultsProto*) value {
  if (result.mutableCompletedGamesList == nil) {
    result.mutableCompletedGamesList = [NSMutableArray array];
  }
  [result.mutableCompletedGamesList addObject:value];
  return self;
}
- (NSArray*) myTurnList {
  if (result.mutableMyTurnList == nil) { return [NSArray array]; }
  return result.mutableMyTurnList;
}
- (OngoingGameProto*) myTurnAtIndex:(int32_t) index {
  return [result myTurnAtIndex:index];
}
- (RetrieveUserGamesResponseProto_Builder*) replaceMyTurnAtIndex:(int32_t) index with:(OngoingGameProto*) value {
  [result.mutableMyTurnList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) addAllMyTurn:(NSArray*) values {
  if (result.mutableMyTurnList == nil) {
    result.mutableMyTurnList = [NSMutableArray array];
  }
  [result.mutableMyTurnList addObjectsFromArray:values];
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) clearMyTurnList {
  result.mutableMyTurnList = nil;
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) addMyTurn:(OngoingGameProto*) value {
  if (result.mutableMyTurnList == nil) {
    result.mutableMyTurnList = [NSMutableArray array];
  }
  [result.mutableMyTurnList addObject:value];
  return self;
}
- (NSArray*) notMyTurnList {
  if (result.mutableNotMyTurnList == nil) { return [NSArray array]; }
  return result.mutableNotMyTurnList;
}
- (OngoingGameProto*) notMyTurnAtIndex:(int32_t) index {
  return [result notMyTurnAtIndex:index];
}
- (RetrieveUserGamesResponseProto_Builder*) replaceNotMyTurnAtIndex:(int32_t) index with:(OngoingGameProto*) value {
  [result.mutableNotMyTurnList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) addAllNotMyTurn:(NSArray*) values {
  if (result.mutableNotMyTurnList == nil) {
    result.mutableNotMyTurnList = [NSMutableArray array];
  }
  [result.mutableNotMyTurnList addObjectsFromArray:values];
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) clearNotMyTurnList {
  result.mutableNotMyTurnList = nil;
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) addNotMyTurn:(OngoingGameProto*) value {
  if (result.mutableNotMyTurnList == nil) {
    result.mutableNotMyTurnList = [NSMutableArray array];
  }
  [result.mutableNotMyTurnList addObject:value];
  return self;
}
- (NSArray*) pictureNamesList {
  if (result.mutablePictureNamesList == nil) {
    return [NSArray array];
  }
  return result.mutablePictureNamesList;
}
- (NSString*) pictureNamesAtIndex:(int32_t) index {
  return [result pictureNamesAtIndex:index];
}
- (RetrieveUserGamesResponseProto_Builder*) replacePictureNamesAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutablePictureNamesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) addPictureNames:(NSString*) value {
  if (result.mutablePictureNamesList == nil) {
    result.mutablePictureNamesList = [NSMutableArray array];
  }
  [result.mutablePictureNamesList addObject:value];
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) addAllPictureNames:(NSArray*) values {
  if (result.mutablePictureNamesList == nil) {
    result.mutablePictureNamesList = [NSMutableArray array];
  }
  [result.mutablePictureNamesList addObjectsFromArray:values];
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) clearPictureNamesList {
  result.mutablePictureNamesList = nil;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RetrieveUserGamesResponseProto_RetrieveUserGamesStatus) status {
  return result.status;
}
- (RetrieveUserGamesResponseProto_Builder*) setStatus:(RetrieveUserGamesResponseProto_RetrieveUserGamesStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RetrieveUserGamesResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RetrieveUserGamesResponseProto_RetrieveUserGamesStatusSuccess;
  return self;
}
@end

