// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "SaveRoundProgressEvent.pb.h"

@implementation SaveRoundProgressEventRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SaveRoundProgressEventRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [TriviaQuestionFormatRoot registerAllExtensions:registry];
    [TriviaRoundFormatRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SaveRoundProgressRequestProto ()
@property (retain) BasicUserProto* sender;
@property (retain) NSString* gameId;
@property (retain) UnfinishedRoundProto* round;
@end

@implementation SaveRoundProgressRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasGameId {
  return !!hasGameId_;
}
- (void) setHasGameId:(BOOL) value {
  hasGameId_ = !!value;
}
@synthesize gameId;
- (BOOL) hasRound {
  return !!hasRound_;
}
- (void) setHasRound:(BOOL) value {
  hasRound_ = !!value;
}
@synthesize round;
- (void) dealloc {
  self.sender = nil;
  self.gameId = nil;
  self.round = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [BasicUserProto defaultInstance];
    self.gameId = @"";
    self.round = [UnfinishedRoundProto defaultInstance];
  }
  return self;
}
static SaveRoundProgressRequestProto* defaultSaveRoundProgressRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [SaveRoundProgressRequestProto class]) {
    defaultSaveRoundProgressRequestProtoInstance = [[SaveRoundProgressRequestProto alloc] init];
  }
}
+ (SaveRoundProgressRequestProto*) defaultInstance {
  return defaultSaveRoundProgressRequestProtoInstance;
}
- (SaveRoundProgressRequestProto*) defaultInstance {
  return defaultSaveRoundProgressRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasGameId) {
    [output writeString:2 value:self.gameId];
  }
  if (self.hasRound) {
    [output writeMessage:3 value:self.round];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasGameId) {
    size += computeStringSize(2, self.gameId);
  }
  if (self.hasRound) {
    size += computeMessageSize(3, self.round);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SaveRoundProgressRequestProto*) parseFromData:(NSData*) data {
  return (SaveRoundProgressRequestProto*)[[[SaveRoundProgressRequestProto builder] mergeFromData:data] build];
}
+ (SaveRoundProgressRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SaveRoundProgressRequestProto*)[[[SaveRoundProgressRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SaveRoundProgressRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (SaveRoundProgressRequestProto*)[[[SaveRoundProgressRequestProto builder] mergeFromInputStream:input] build];
}
+ (SaveRoundProgressRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SaveRoundProgressRequestProto*)[[[SaveRoundProgressRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SaveRoundProgressRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SaveRoundProgressRequestProto*)[[[SaveRoundProgressRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (SaveRoundProgressRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SaveRoundProgressRequestProto*)[[[SaveRoundProgressRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SaveRoundProgressRequestProto_Builder*) builder {
  return [[[SaveRoundProgressRequestProto_Builder alloc] init] autorelease];
}
+ (SaveRoundProgressRequestProto_Builder*) builderWithPrototype:(SaveRoundProgressRequestProto*) prototype {
  return [[SaveRoundProgressRequestProto builder] mergeFrom:prototype];
}
- (SaveRoundProgressRequestProto_Builder*) builder {
  return [SaveRoundProgressRequestProto builder];
}
@end

@interface SaveRoundProgressRequestProto_Builder()
@property (retain) SaveRoundProgressRequestProto* result;
@end

@implementation SaveRoundProgressRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SaveRoundProgressRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SaveRoundProgressRequestProto_Builder*) clear {
  self.result = [[[SaveRoundProgressRequestProto alloc] init] autorelease];
  return self;
}
- (SaveRoundProgressRequestProto_Builder*) clone {
  return [SaveRoundProgressRequestProto builderWithPrototype:result];
}
- (SaveRoundProgressRequestProto*) defaultInstance {
  return [SaveRoundProgressRequestProto defaultInstance];
}
- (SaveRoundProgressRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SaveRoundProgressRequestProto*) buildPartial {
  SaveRoundProgressRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SaveRoundProgressRequestProto_Builder*) mergeFrom:(SaveRoundProgressRequestProto*) other {
  if (other == [SaveRoundProgressRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasGameId) {
    [self setGameId:other.gameId];
  }
  if (other.hasRound) {
    [self mergeRound:other.round];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SaveRoundProgressRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SaveRoundProgressRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BasicUserProto_Builder* subBuilder = [BasicUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setGameId:[input readString]];
        break;
      }
      case 26: {
        UnfinishedRoundProto_Builder* subBuilder = [UnfinishedRoundProto builder];
        if (self.hasRound) {
          [subBuilder mergeFrom:self.round];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRound:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (BasicUserProto*) sender {
  return result.sender;
}
- (SaveRoundProgressRequestProto_Builder*) setSender:(BasicUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SaveRoundProgressRequestProto_Builder*) setSenderBuilder:(BasicUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SaveRoundProgressRequestProto_Builder*) mergeSender:(BasicUserProto*) value {
  if (result.hasSender &&
      result.sender != [BasicUserProto defaultInstance]) {
    result.sender =
      [[[BasicUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SaveRoundProgressRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [BasicUserProto defaultInstance];
  return self;
}
- (BOOL) hasGameId {
  return result.hasGameId;
}
- (NSString*) gameId {
  return result.gameId;
}
- (SaveRoundProgressRequestProto_Builder*) setGameId:(NSString*) value {
  result.hasGameId = YES;
  result.gameId = value;
  return self;
}
- (SaveRoundProgressRequestProto_Builder*) clearGameId {
  result.hasGameId = NO;
  result.gameId = @"";
  return self;
}
- (BOOL) hasRound {
  return result.hasRound;
}
- (UnfinishedRoundProto*) round {
  return result.round;
}
- (SaveRoundProgressRequestProto_Builder*) setRound:(UnfinishedRoundProto*) value {
  result.hasRound = YES;
  result.round = value;
  return self;
}
- (SaveRoundProgressRequestProto_Builder*) setRoundBuilder:(UnfinishedRoundProto_Builder*) builderForValue {
  return [self setRound:[builderForValue build]];
}
- (SaveRoundProgressRequestProto_Builder*) mergeRound:(UnfinishedRoundProto*) value {
  if (result.hasRound &&
      result.round != [UnfinishedRoundProto defaultInstance]) {
    result.round =
      [[[UnfinishedRoundProto builderWithPrototype:result.round] mergeFrom:value] buildPartial];
  } else {
    result.round = value;
  }
  result.hasRound = YES;
  return self;
}
- (SaveRoundProgressRequestProto_Builder*) clearRound {
  result.hasRound = NO;
  result.round = [UnfinishedRoundProto defaultInstance];
  return self;
}
@end

@interface SaveRoundProgressResponseProto ()
@property (retain) BasicUserProto* recipient;
@property (retain) NSString* gameId;
@property SaveRoundProgressResponseProto_SaveRoundProgressStatus status;
@end

@implementation SaveRoundProgressResponseProto

- (BOOL) hasRecipient {
  return !!hasRecipient_;
}
- (void) setHasRecipient:(BOOL) value {
  hasRecipient_ = !!value;
}
@synthesize recipient;
- (BOOL) hasGameId {
  return !!hasGameId_;
}
- (void) setHasGameId:(BOOL) value {
  hasGameId_ = !!value;
}
@synthesize gameId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.recipient = nil;
  self.gameId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.recipient = [BasicUserProto defaultInstance];
    self.gameId = @"";
    self.status = SaveRoundProgressResponseProto_SaveRoundProgressStatusSuccess;
  }
  return self;
}
static SaveRoundProgressResponseProto* defaultSaveRoundProgressResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [SaveRoundProgressResponseProto class]) {
    defaultSaveRoundProgressResponseProtoInstance = [[SaveRoundProgressResponseProto alloc] init];
  }
}
+ (SaveRoundProgressResponseProto*) defaultInstance {
  return defaultSaveRoundProgressResponseProtoInstance;
}
- (SaveRoundProgressResponseProto*) defaultInstance {
  return defaultSaveRoundProgressResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRecipient) {
    [output writeMessage:1 value:self.recipient];
  }
  if (self.hasGameId) {
    [output writeString:2 value:self.gameId];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRecipient) {
    size += computeMessageSize(1, self.recipient);
  }
  if (self.hasGameId) {
    size += computeStringSize(2, self.gameId);
  }
  if (self.hasStatus) {
    size += computeEnumSize(3, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SaveRoundProgressResponseProto*) parseFromData:(NSData*) data {
  return (SaveRoundProgressResponseProto*)[[[SaveRoundProgressResponseProto builder] mergeFromData:data] build];
}
+ (SaveRoundProgressResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SaveRoundProgressResponseProto*)[[[SaveRoundProgressResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SaveRoundProgressResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (SaveRoundProgressResponseProto*)[[[SaveRoundProgressResponseProto builder] mergeFromInputStream:input] build];
}
+ (SaveRoundProgressResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SaveRoundProgressResponseProto*)[[[SaveRoundProgressResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SaveRoundProgressResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SaveRoundProgressResponseProto*)[[[SaveRoundProgressResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (SaveRoundProgressResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SaveRoundProgressResponseProto*)[[[SaveRoundProgressResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SaveRoundProgressResponseProto_Builder*) builder {
  return [[[SaveRoundProgressResponseProto_Builder alloc] init] autorelease];
}
+ (SaveRoundProgressResponseProto_Builder*) builderWithPrototype:(SaveRoundProgressResponseProto*) prototype {
  return [[SaveRoundProgressResponseProto builder] mergeFrom:prototype];
}
- (SaveRoundProgressResponseProto_Builder*) builder {
  return [SaveRoundProgressResponseProto builder];
}
@end

BOOL SaveRoundProgressResponseProto_SaveRoundProgressStatusIsValidValue(SaveRoundProgressResponseProto_SaveRoundProgressStatus value) {
  switch (value) {
    case SaveRoundProgressResponseProto_SaveRoundProgressStatusSuccess:
    case SaveRoundProgressResponseProto_SaveRoundProgressStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface SaveRoundProgressResponseProto_Builder()
@property (retain) SaveRoundProgressResponseProto* result;
@end

@implementation SaveRoundProgressResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SaveRoundProgressResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SaveRoundProgressResponseProto_Builder*) clear {
  self.result = [[[SaveRoundProgressResponseProto alloc] init] autorelease];
  return self;
}
- (SaveRoundProgressResponseProto_Builder*) clone {
  return [SaveRoundProgressResponseProto builderWithPrototype:result];
}
- (SaveRoundProgressResponseProto*) defaultInstance {
  return [SaveRoundProgressResponseProto defaultInstance];
}
- (SaveRoundProgressResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SaveRoundProgressResponseProto*) buildPartial {
  SaveRoundProgressResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SaveRoundProgressResponseProto_Builder*) mergeFrom:(SaveRoundProgressResponseProto*) other {
  if (other == [SaveRoundProgressResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasRecipient) {
    [self mergeRecipient:other.recipient];
  }
  if (other.hasGameId) {
    [self setGameId:other.gameId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SaveRoundProgressResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SaveRoundProgressResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BasicUserProto_Builder* subBuilder = [BasicUserProto builder];
        if (self.hasRecipient) {
          [subBuilder mergeFrom:self.recipient];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecipient:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setGameId:[input readString]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (SaveRoundProgressResponseProto_SaveRoundProgressStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasRecipient {
  return result.hasRecipient;
}
- (BasicUserProto*) recipient {
  return result.recipient;
}
- (SaveRoundProgressResponseProto_Builder*) setRecipient:(BasicUserProto*) value {
  result.hasRecipient = YES;
  result.recipient = value;
  return self;
}
- (SaveRoundProgressResponseProto_Builder*) setRecipientBuilder:(BasicUserProto_Builder*) builderForValue {
  return [self setRecipient:[builderForValue build]];
}
- (SaveRoundProgressResponseProto_Builder*) mergeRecipient:(BasicUserProto*) value {
  if (result.hasRecipient &&
      result.recipient != [BasicUserProto defaultInstance]) {
    result.recipient =
      [[[BasicUserProto builderWithPrototype:result.recipient] mergeFrom:value] buildPartial];
  } else {
    result.recipient = value;
  }
  result.hasRecipient = YES;
  return self;
}
- (SaveRoundProgressResponseProto_Builder*) clearRecipient {
  result.hasRecipient = NO;
  result.recipient = [BasicUserProto defaultInstance];
  return self;
}
- (BOOL) hasGameId {
  return result.hasGameId;
}
- (NSString*) gameId {
  return result.gameId;
}
- (SaveRoundProgressResponseProto_Builder*) setGameId:(NSString*) value {
  result.hasGameId = YES;
  result.gameId = value;
  return self;
}
- (SaveRoundProgressResponseProto_Builder*) clearGameId {
  result.hasGameId = NO;
  result.gameId = @"";
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (SaveRoundProgressResponseProto_SaveRoundProgressStatus) status {
  return result.status;
}
- (SaveRoundProgressResponseProto_Builder*) setStatus:(SaveRoundProgressResponseProto_SaveRoundProgressStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (SaveRoundProgressResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = SaveRoundProgressResponseProto_SaveRoundProgressStatusSuccess;
  return self;
}
@end

