// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "LoginEvent.pb.h"

@implementation LoginEventRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [LoginEventRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [TriviaGameFormatRoot registerAllExtensions:registry];
    [TriviaQuestionFormatRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface LoginRequestProto ()
@property (retain) BasicUserProto* sender;
@property (retain) NSMutableArray* mutableFacebookFriendIdsList;
@property LoginRequestProto_LoginType loginType;
@end

@implementation LoginRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableFacebookFriendIdsList;
- (BOOL) hasLoginType {
  return !!hasLoginType_;
}
- (void) setHasLoginType:(BOOL) value {
  hasLoginType_ = !!value;
}
@synthesize loginType;
- (void) dealloc {
  self.sender = nil;
  self.mutableFacebookFriendIdsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [BasicUserProto defaultInstance];
    self.loginType = LoginRequestProto_LoginTypeLoginToken;
  }
  return self;
}
static LoginRequestProto* defaultLoginRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [LoginRequestProto class]) {
    defaultLoginRequestProtoInstance = [[LoginRequestProto alloc] init];
  }
}
+ (LoginRequestProto*) defaultInstance {
  return defaultLoginRequestProtoInstance;
}
- (LoginRequestProto*) defaultInstance {
  return defaultLoginRequestProtoInstance;
}
- (NSArray*) facebookFriendIdsList {
  return mutableFacebookFriendIdsList;
}
- (NSString*) facebookFriendIdsAtIndex:(int32_t) index {
  id value = [mutableFacebookFriendIdsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (NSString* element in self.mutableFacebookFriendIdsList) {
    [output writeString:2 value:element];
  }
  if (self.hasLoginType) {
    [output writeEnum:3 value:self.loginType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableFacebookFriendIdsList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableFacebookFriendIdsList.count;
  }
  if (self.hasLoginType) {
    size += computeEnumSize(3, self.loginType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LoginRequestProto*) parseFromData:(NSData*) data {
  return (LoginRequestProto*)[[[LoginRequestProto builder] mergeFromData:data] build];
}
+ (LoginRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginRequestProto*)[[[LoginRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (LoginRequestProto*)[[[LoginRequestProto builder] mergeFromInputStream:input] build];
}
+ (LoginRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginRequestProto*)[[[LoginRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginRequestProto*)[[[LoginRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (LoginRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginRequestProto*)[[[LoginRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginRequestProto_Builder*) builder {
  return [[[LoginRequestProto_Builder alloc] init] autorelease];
}
+ (LoginRequestProto_Builder*) builderWithPrototype:(LoginRequestProto*) prototype {
  return [[LoginRequestProto builder] mergeFrom:prototype];
}
- (LoginRequestProto_Builder*) builder {
  return [LoginRequestProto builder];
}
@end

BOOL LoginRequestProto_LoginTypeIsValidValue(LoginRequestProto_LoginType value) {
  switch (value) {
    case LoginRequestProto_LoginTypeLoginToken:
    case LoginRequestProto_LoginTypeFacebook:
    case LoginRequestProto_LoginTypeEmailPassword:
    case LoginRequestProto_LoginTypeNoCredentials:
      return YES;
    default:
      return NO;
  }
}
@interface LoginRequestProto_Builder()
@property (retain) LoginRequestProto* result;
@end

@implementation LoginRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LoginRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoginRequestProto_Builder*) clear {
  self.result = [[[LoginRequestProto alloc] init] autorelease];
  return self;
}
- (LoginRequestProto_Builder*) clone {
  return [LoginRequestProto builderWithPrototype:result];
}
- (LoginRequestProto*) defaultInstance {
  return [LoginRequestProto defaultInstance];
}
- (LoginRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginRequestProto*) buildPartial {
  LoginRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LoginRequestProto_Builder*) mergeFrom:(LoginRequestProto*) other {
  if (other == [LoginRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableFacebookFriendIdsList.count > 0) {
    if (result.mutableFacebookFriendIdsList == nil) {
      result.mutableFacebookFriendIdsList = [NSMutableArray array];
    }
    [result.mutableFacebookFriendIdsList addObjectsFromArray:other.mutableFacebookFriendIdsList];
  }
  if (other.hasLoginType) {
    [self setLoginType:other.loginType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BasicUserProto_Builder* subBuilder = [BasicUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self addFacebookFriendIds:[input readString]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (LoginRequestProto_LoginTypeIsValidValue(value)) {
          [self setLoginType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (BasicUserProto*) sender {
  return result.sender;
}
- (LoginRequestProto_Builder*) setSender:(BasicUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (LoginRequestProto_Builder*) setSenderBuilder:(BasicUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (LoginRequestProto_Builder*) mergeSender:(BasicUserProto*) value {
  if (result.hasSender &&
      result.sender != [BasicUserProto defaultInstance]) {
    result.sender =
      [[[BasicUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (LoginRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [BasicUserProto defaultInstance];
  return self;
}
- (NSArray*) facebookFriendIdsList {
  if (result.mutableFacebookFriendIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableFacebookFriendIdsList;
}
- (NSString*) facebookFriendIdsAtIndex:(int32_t) index {
  return [result facebookFriendIdsAtIndex:index];
}
- (LoginRequestProto_Builder*) replaceFacebookFriendIdsAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableFacebookFriendIdsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (LoginRequestProto_Builder*) addFacebookFriendIds:(NSString*) value {
  if (result.mutableFacebookFriendIdsList == nil) {
    result.mutableFacebookFriendIdsList = [NSMutableArray array];
  }
  [result.mutableFacebookFriendIdsList addObject:value];
  return self;
}
- (LoginRequestProto_Builder*) addAllFacebookFriendIds:(NSArray*) values {
  if (result.mutableFacebookFriendIdsList == nil) {
    result.mutableFacebookFriendIdsList = [NSMutableArray array];
  }
  [result.mutableFacebookFriendIdsList addObjectsFromArray:values];
  return self;
}
- (LoginRequestProto_Builder*) clearFacebookFriendIdsList {
  result.mutableFacebookFriendIdsList = nil;
  return self;
}
- (BOOL) hasLoginType {
  return result.hasLoginType;
}
- (LoginRequestProto_LoginType) loginType {
  return result.loginType;
}
- (LoginRequestProto_Builder*) setLoginType:(LoginRequestProto_LoginType) value {
  result.hasLoginType = YES;
  result.loginType = value;
  return self;
}
- (LoginRequestProto_Builder*) clearLoginType {
  result.hasLoginType = NO;
  result.loginType = LoginRequestProto_LoginTypeLoginToken;
  return self;
}
@end

@interface LoginResponseProto ()
@property (retain) CompleteUserProto* recipient;
@property (retain) NSMutableArray* mutableCompletedGamesList;
@property (retain) NSMutableArray* mutableMyTurnList;
@property (retain) NSMutableArray* mutableNotMyTurnList;
@property (retain) NSMutableArray* mutableNewQuestionsList;
@property LoginResponseProto_LoginResponseStatus status;
@property (retain) NSMutableArray* mutableFacebookFriendsWithAccountsList;
@property (retain) NSMutableArray* mutablePictureNamesList;
@property (retain) LoginResponseProto_LoginConstants* loginConstants;
@end

@implementation LoginResponseProto

- (BOOL) hasRecipient {
  return !!hasRecipient_;
}
- (void) setHasRecipient:(BOOL) value {
  hasRecipient_ = !!value;
}
@synthesize recipient;
@synthesize mutableCompletedGamesList;
@synthesize mutableMyTurnList;
@synthesize mutableNotMyTurnList;
@synthesize mutableNewQuestionsList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
@synthesize mutableFacebookFriendsWithAccountsList;
@synthesize mutablePictureNamesList;
- (BOOL) hasLoginConstants {
  return !!hasLoginConstants_;
}
- (void) setHasLoginConstants:(BOOL) value {
  hasLoginConstants_ = !!value;
}
@synthesize loginConstants;
- (void) dealloc {
  self.recipient = nil;
  self.mutableCompletedGamesList = nil;
  self.mutableMyTurnList = nil;
  self.mutableNotMyTurnList = nil;
  self.mutableNewQuestionsList = nil;
  self.mutableFacebookFriendsWithAccountsList = nil;
  self.mutablePictureNamesList = nil;
  self.loginConstants = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.recipient = [CompleteUserProto defaultInstance];
    self.status = LoginResponseProto_LoginResponseStatusSuccessLoginToken;
    self.loginConstants = [LoginResponseProto_LoginConstants defaultInstance];
  }
  return self;
}
static LoginResponseProto* defaultLoginResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [LoginResponseProto class]) {
    defaultLoginResponseProtoInstance = [[LoginResponseProto alloc] init];
  }
}
+ (LoginResponseProto*) defaultInstance {
  return defaultLoginResponseProtoInstance;
}
- (LoginResponseProto*) defaultInstance {
  return defaultLoginResponseProtoInstance;
}
- (NSArray*) completedGamesList {
  return mutableCompletedGamesList;
}
- (GameResultsProto*) completedGamesAtIndex:(int32_t) index {
  id value = [mutableCompletedGamesList objectAtIndex:index];
  return value;
}
- (NSArray*) myTurnList {
  return mutableMyTurnList;
}
- (OngoingGameProto*) myTurnAtIndex:(int32_t) index {
  id value = [mutableMyTurnList objectAtIndex:index];
  return value;
}
- (NSArray*) notMyTurnList {
  return mutableNotMyTurnList;
}
- (OngoingGameProto*) notMyTurnAtIndex:(int32_t) index {
  id value = [mutableNotMyTurnList objectAtIndex:index];
  return value;
}
- (NSArray*) newQuestionsList {
  return mutableNewQuestionsList;
}
- (QuestionProto*) newQuestionsAtIndex:(int32_t) index {
  id value = [mutableNewQuestionsList objectAtIndex:index];
  return value;
}
- (NSArray*) facebookFriendsWithAccountsList {
  return mutableFacebookFriendsWithAccountsList;
}
- (BasicUserProto*) facebookFriendsWithAccountsAtIndex:(int32_t) index {
  id value = [mutableFacebookFriendsWithAccountsList objectAtIndex:index];
  return value;
}
- (NSArray*) pictureNamesList {
  return mutablePictureNamesList;
}
- (NSString*) pictureNamesAtIndex:(int32_t) index {
  id value = [mutablePictureNamesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRecipient) {
    [output writeMessage:1 value:self.recipient];
  }
  for (GameResultsProto* element in self.completedGamesList) {
    [output writeMessage:2 value:element];
  }
  for (OngoingGameProto* element in self.myTurnList) {
    [output writeMessage:3 value:element];
  }
  for (OngoingGameProto* element in self.notMyTurnList) {
    [output writeMessage:4 value:element];
  }
  for (QuestionProto* element in self.newQuestionsList) {
    [output writeMessage:5 value:element];
  }
  if (self.hasStatus) {
    [output writeEnum:6 value:self.status];
  }
  for (BasicUserProto* element in self.facebookFriendsWithAccountsList) {
    [output writeMessage:7 value:element];
  }
  for (NSString* element in self.mutablePictureNamesList) {
    [output writeString:8 value:element];
  }
  if (self.hasLoginConstants) {
    [output writeMessage:9 value:self.loginConstants];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRecipient) {
    size += computeMessageSize(1, self.recipient);
  }
  for (GameResultsProto* element in self.completedGamesList) {
    size += computeMessageSize(2, element);
  }
  for (OngoingGameProto* element in self.myTurnList) {
    size += computeMessageSize(3, element);
  }
  for (OngoingGameProto* element in self.notMyTurnList) {
    size += computeMessageSize(4, element);
  }
  for (QuestionProto* element in self.newQuestionsList) {
    size += computeMessageSize(5, element);
  }
  if (self.hasStatus) {
    size += computeEnumSize(6, self.status);
  }
  for (BasicUserProto* element in self.facebookFriendsWithAccountsList) {
    size += computeMessageSize(7, element);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutablePictureNamesList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutablePictureNamesList.count;
  }
  if (self.hasLoginConstants) {
    size += computeMessageSize(9, self.loginConstants);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LoginResponseProto*) parseFromData:(NSData*) data {
  return (LoginResponseProto*)[[[LoginResponseProto builder] mergeFromData:data] build];
}
+ (LoginResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto*)[[[LoginResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (LoginResponseProto*)[[[LoginResponseProto builder] mergeFromInputStream:input] build];
}
+ (LoginResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto*)[[[LoginResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginResponseProto*)[[[LoginResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (LoginResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto*)[[[LoginResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_Builder*) builder {
  return [[[LoginResponseProto_Builder alloc] init] autorelease];
}
+ (LoginResponseProto_Builder*) builderWithPrototype:(LoginResponseProto*) prototype {
  return [[LoginResponseProto builder] mergeFrom:prototype];
}
- (LoginResponseProto_Builder*) builder {
  return [LoginResponseProto builder];
}
@end

BOOL LoginResponseProto_LoginResponseStatusIsValidValue(LoginResponseProto_LoginResponseStatus value) {
  switch (value) {
    case LoginResponseProto_LoginResponseStatusSuccessLoginToken:
    case LoginResponseProto_LoginResponseStatusSuccessFacebookId:
    case LoginResponseProto_LoginResponseStatusSuccessEmailPassword:
    case LoginResponseProto_LoginResponseStatusSuccessNoCredentials:
    case LoginResponseProto_LoginResponseStatusInvalidLoginToken:
    case LoginResponseProto_LoginResponseStatusInvalidFacebookId:
    case LoginResponseProto_LoginResponseStatusInvalidEmailPassword:
    case LoginResponseProto_LoginResponseStatusInvalidNoCredentials:
    case LoginResponseProto_LoginResponseStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface LoginResponseProto_LoginConstants ()
@property (retain) LoginResponseProto_LoginConstants_CurrencyConstants* currencyConstants;
@property (retain) LoginResponseProto_LoginConstants_RoundConstants* roundConstants;
@property (retain) LoginResponseProto_LoginConstants_QuestionTypeScoringConstants* scoreTypes;
@end

@implementation LoginResponseProto_LoginConstants

- (BOOL) hasCurrencyConstants {
  return !!hasCurrencyConstants_;
}
- (void) setHasCurrencyConstants:(BOOL) value {
  hasCurrencyConstants_ = !!value;
}
@synthesize currencyConstants;
- (BOOL) hasRoundConstants {
  return !!hasRoundConstants_;
}
- (void) setHasRoundConstants:(BOOL) value {
  hasRoundConstants_ = !!value;
}
@synthesize roundConstants;
- (BOOL) hasScoreTypes {
  return !!hasScoreTypes_;
}
- (void) setHasScoreTypes:(BOOL) value {
  hasScoreTypes_ = !!value;
}
@synthesize scoreTypes;
- (void) dealloc {
  self.currencyConstants = nil;
  self.roundConstants = nil;
  self.scoreTypes = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.currencyConstants = [LoginResponseProto_LoginConstants_CurrencyConstants defaultInstance];
    self.roundConstants = [LoginResponseProto_LoginConstants_RoundConstants defaultInstance];
    self.scoreTypes = [LoginResponseProto_LoginConstants_QuestionTypeScoringConstants defaultInstance];
  }
  return self;
}
static LoginResponseProto_LoginConstants* defaultLoginResponseProto_LoginConstantsInstance = nil;
+ (void) initialize {
  if (self == [LoginResponseProto_LoginConstants class]) {
    defaultLoginResponseProto_LoginConstantsInstance = [[LoginResponseProto_LoginConstants alloc] init];
  }
}
+ (LoginResponseProto_LoginConstants*) defaultInstance {
  return defaultLoginResponseProto_LoginConstantsInstance;
}
- (LoginResponseProto_LoginConstants*) defaultInstance {
  return defaultLoginResponseProto_LoginConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCurrencyConstants) {
    [output writeMessage:1 value:self.currencyConstants];
  }
  if (self.hasRoundConstants) {
    [output writeMessage:2 value:self.roundConstants];
  }
  if (self.hasScoreTypes) {
    [output writeMessage:3 value:self.scoreTypes];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCurrencyConstants) {
    size += computeMessageSize(1, self.currencyConstants);
  }
  if (self.hasRoundConstants) {
    size += computeMessageSize(2, self.roundConstants);
  }
  if (self.hasScoreTypes) {
    size += computeMessageSize(3, self.scoreTypes);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LoginResponseProto_LoginConstants*) parseFromData:(NSData*) data {
  return (LoginResponseProto_LoginConstants*)[[[LoginResponseProto_LoginConstants builder] mergeFromData:data] build];
}
+ (LoginResponseProto_LoginConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto_LoginConstants*)[[[LoginResponseProto_LoginConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_LoginConstants*) parseFromInputStream:(NSInputStream*) input {
  return (LoginResponseProto_LoginConstants*)[[[LoginResponseProto_LoginConstants builder] mergeFromInputStream:input] build];
}
+ (LoginResponseProto_LoginConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto_LoginConstants*)[[[LoginResponseProto_LoginConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_LoginConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginResponseProto_LoginConstants*)[[[LoginResponseProto_LoginConstants builder] mergeFromCodedInputStream:input] build];
}
+ (LoginResponseProto_LoginConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto_LoginConstants*)[[[LoginResponseProto_LoginConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_LoginConstants_Builder*) builder {
  return [[[LoginResponseProto_LoginConstants_Builder alloc] init] autorelease];
}
+ (LoginResponseProto_LoginConstants_Builder*) builderWithPrototype:(LoginResponseProto_LoginConstants*) prototype {
  return [[LoginResponseProto_LoginConstants builder] mergeFrom:prototype];
}
- (LoginResponseProto_LoginConstants_Builder*) builder {
  return [LoginResponseProto_LoginConstants builder];
}
@end

@interface LoginResponseProto_LoginConstants_CurrencyConstants ()
@property int32_t defaultInitialRubies;
@property int32_t defaultInitialTokens;
@property int32_t numSecondsUntilRefill;
@end

@implementation LoginResponseProto_LoginConstants_CurrencyConstants

- (BOOL) hasDefaultInitialRubies {
  return !!hasDefaultInitialRubies_;
}
- (void) setHasDefaultInitialRubies:(BOOL) value {
  hasDefaultInitialRubies_ = !!value;
}
@synthesize defaultInitialRubies;
- (BOOL) hasDefaultInitialTokens {
  return !!hasDefaultInitialTokens_;
}
- (void) setHasDefaultInitialTokens:(BOOL) value {
  hasDefaultInitialTokens_ = !!value;
}
@synthesize defaultInitialTokens;
- (BOOL) hasNumSecondsUntilRefill {
  return !!hasNumSecondsUntilRefill_;
}
- (void) setHasNumSecondsUntilRefill:(BOOL) value {
  hasNumSecondsUntilRefill_ = !!value;
}
@synthesize numSecondsUntilRefill;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.defaultInitialRubies = 0;
    self.defaultInitialTokens = 0;
    self.numSecondsUntilRefill = 0;
  }
  return self;
}
static LoginResponseProto_LoginConstants_CurrencyConstants* defaultLoginResponseProto_LoginConstants_CurrencyConstantsInstance = nil;
+ (void) initialize {
  if (self == [LoginResponseProto_LoginConstants_CurrencyConstants class]) {
    defaultLoginResponseProto_LoginConstants_CurrencyConstantsInstance = [[LoginResponseProto_LoginConstants_CurrencyConstants alloc] init];
  }
}
+ (LoginResponseProto_LoginConstants_CurrencyConstants*) defaultInstance {
  return defaultLoginResponseProto_LoginConstants_CurrencyConstantsInstance;
}
- (LoginResponseProto_LoginConstants_CurrencyConstants*) defaultInstance {
  return defaultLoginResponseProto_LoginConstants_CurrencyConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDefaultInitialRubies) {
    [output writeInt32:1 value:self.defaultInitialRubies];
  }
  if (self.hasDefaultInitialTokens) {
    [output writeInt32:2 value:self.defaultInitialTokens];
  }
  if (self.hasNumSecondsUntilRefill) {
    [output writeInt32:3 value:self.numSecondsUntilRefill];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDefaultInitialRubies) {
    size += computeInt32Size(1, self.defaultInitialRubies);
  }
  if (self.hasDefaultInitialTokens) {
    size += computeInt32Size(2, self.defaultInitialTokens);
  }
  if (self.hasNumSecondsUntilRefill) {
    size += computeInt32Size(3, self.numSecondsUntilRefill);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LoginResponseProto_LoginConstants_CurrencyConstants*) parseFromData:(NSData*) data {
  return (LoginResponseProto_LoginConstants_CurrencyConstants*)[[[LoginResponseProto_LoginConstants_CurrencyConstants builder] mergeFromData:data] build];
}
+ (LoginResponseProto_LoginConstants_CurrencyConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto_LoginConstants_CurrencyConstants*)[[[LoginResponseProto_LoginConstants_CurrencyConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_LoginConstants_CurrencyConstants*) parseFromInputStream:(NSInputStream*) input {
  return (LoginResponseProto_LoginConstants_CurrencyConstants*)[[[LoginResponseProto_LoginConstants_CurrencyConstants builder] mergeFromInputStream:input] build];
}
+ (LoginResponseProto_LoginConstants_CurrencyConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto_LoginConstants_CurrencyConstants*)[[[LoginResponseProto_LoginConstants_CurrencyConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_LoginConstants_CurrencyConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginResponseProto_LoginConstants_CurrencyConstants*)[[[LoginResponseProto_LoginConstants_CurrencyConstants builder] mergeFromCodedInputStream:input] build];
}
+ (LoginResponseProto_LoginConstants_CurrencyConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto_LoginConstants_CurrencyConstants*)[[[LoginResponseProto_LoginConstants_CurrencyConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) builder {
  return [[[LoginResponseProto_LoginConstants_CurrencyConstants_Builder alloc] init] autorelease];
}
+ (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) builderWithPrototype:(LoginResponseProto_LoginConstants_CurrencyConstants*) prototype {
  return [[LoginResponseProto_LoginConstants_CurrencyConstants builder] mergeFrom:prototype];
}
- (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) builder {
  return [LoginResponseProto_LoginConstants_CurrencyConstants builder];
}
@end

@interface LoginResponseProto_LoginConstants_CurrencyConstants_Builder()
@property (retain) LoginResponseProto_LoginConstants_CurrencyConstants* result;
@end

@implementation LoginResponseProto_LoginConstants_CurrencyConstants_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LoginResponseProto_LoginConstants_CurrencyConstants alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) clear {
  self.result = [[[LoginResponseProto_LoginConstants_CurrencyConstants alloc] init] autorelease];
  return self;
}
- (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) clone {
  return [LoginResponseProto_LoginConstants_CurrencyConstants builderWithPrototype:result];
}
- (LoginResponseProto_LoginConstants_CurrencyConstants*) defaultInstance {
  return [LoginResponseProto_LoginConstants_CurrencyConstants defaultInstance];
}
- (LoginResponseProto_LoginConstants_CurrencyConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginResponseProto_LoginConstants_CurrencyConstants*) buildPartial {
  LoginResponseProto_LoginConstants_CurrencyConstants* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) mergeFrom:(LoginResponseProto_LoginConstants_CurrencyConstants*) other {
  if (other == [LoginResponseProto_LoginConstants_CurrencyConstants defaultInstance]) {
    return self;
  }
  if (other.hasDefaultInitialRubies) {
    [self setDefaultInitialRubies:other.defaultInitialRubies];
  }
  if (other.hasDefaultInitialTokens) {
    [self setDefaultInitialTokens:other.defaultInitialTokens];
  }
  if (other.hasNumSecondsUntilRefill) {
    [self setNumSecondsUntilRefill:other.numSecondsUntilRefill];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDefaultInitialRubies:[input readInt32]];
        break;
      }
      case 16: {
        [self setDefaultInitialTokens:[input readInt32]];
        break;
      }
      case 24: {
        [self setNumSecondsUntilRefill:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasDefaultInitialRubies {
  return result.hasDefaultInitialRubies;
}
- (int32_t) defaultInitialRubies {
  return result.defaultInitialRubies;
}
- (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) setDefaultInitialRubies:(int32_t) value {
  result.hasDefaultInitialRubies = YES;
  result.defaultInitialRubies = value;
  return self;
}
- (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) clearDefaultInitialRubies {
  result.hasDefaultInitialRubies = NO;
  result.defaultInitialRubies = 0;
  return self;
}
- (BOOL) hasDefaultInitialTokens {
  return result.hasDefaultInitialTokens;
}
- (int32_t) defaultInitialTokens {
  return result.defaultInitialTokens;
}
- (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) setDefaultInitialTokens:(int32_t) value {
  result.hasDefaultInitialTokens = YES;
  result.defaultInitialTokens = value;
  return self;
}
- (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) clearDefaultInitialTokens {
  result.hasDefaultInitialTokens = NO;
  result.defaultInitialTokens = 0;
  return self;
}
- (BOOL) hasNumSecondsUntilRefill {
  return result.hasNumSecondsUntilRefill;
}
- (int32_t) numSecondsUntilRefill {
  return result.numSecondsUntilRefill;
}
- (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) setNumSecondsUntilRefill:(int32_t) value {
  result.hasNumSecondsUntilRefill = YES;
  result.numSecondsUntilRefill = value;
  return self;
}
- (LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) clearNumSecondsUntilRefill {
  result.hasNumSecondsUntilRefill = NO;
  result.numSecondsUntilRefill = 0;
  return self;
}
@end

@interface LoginResponseProto_LoginConstants_RoundConstants ()
@property int32_t defaultRoundsPerGame;
@property int32_t defaultMinutesPerRound;
@end

@implementation LoginResponseProto_LoginConstants_RoundConstants

- (BOOL) hasDefaultRoundsPerGame {
  return !!hasDefaultRoundsPerGame_;
}
- (void) setHasDefaultRoundsPerGame:(BOOL) value {
  hasDefaultRoundsPerGame_ = !!value;
}
@synthesize defaultRoundsPerGame;
- (BOOL) hasDefaultMinutesPerRound {
  return !!hasDefaultMinutesPerRound_;
}
- (void) setHasDefaultMinutesPerRound:(BOOL) value {
  hasDefaultMinutesPerRound_ = !!value;
}
@synthesize defaultMinutesPerRound;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.defaultRoundsPerGame = 0;
    self.defaultMinutesPerRound = 0;
  }
  return self;
}
static LoginResponseProto_LoginConstants_RoundConstants* defaultLoginResponseProto_LoginConstants_RoundConstantsInstance = nil;
+ (void) initialize {
  if (self == [LoginResponseProto_LoginConstants_RoundConstants class]) {
    defaultLoginResponseProto_LoginConstants_RoundConstantsInstance = [[LoginResponseProto_LoginConstants_RoundConstants alloc] init];
  }
}
+ (LoginResponseProto_LoginConstants_RoundConstants*) defaultInstance {
  return defaultLoginResponseProto_LoginConstants_RoundConstantsInstance;
}
- (LoginResponseProto_LoginConstants_RoundConstants*) defaultInstance {
  return defaultLoginResponseProto_LoginConstants_RoundConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDefaultRoundsPerGame) {
    [output writeInt32:1 value:self.defaultRoundsPerGame];
  }
  if (self.hasDefaultMinutesPerRound) {
    [output writeInt32:2 value:self.defaultMinutesPerRound];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDefaultRoundsPerGame) {
    size += computeInt32Size(1, self.defaultRoundsPerGame);
  }
  if (self.hasDefaultMinutesPerRound) {
    size += computeInt32Size(2, self.defaultMinutesPerRound);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LoginResponseProto_LoginConstants_RoundConstants*) parseFromData:(NSData*) data {
  return (LoginResponseProto_LoginConstants_RoundConstants*)[[[LoginResponseProto_LoginConstants_RoundConstants builder] mergeFromData:data] build];
}
+ (LoginResponseProto_LoginConstants_RoundConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto_LoginConstants_RoundConstants*)[[[LoginResponseProto_LoginConstants_RoundConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_LoginConstants_RoundConstants*) parseFromInputStream:(NSInputStream*) input {
  return (LoginResponseProto_LoginConstants_RoundConstants*)[[[LoginResponseProto_LoginConstants_RoundConstants builder] mergeFromInputStream:input] build];
}
+ (LoginResponseProto_LoginConstants_RoundConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto_LoginConstants_RoundConstants*)[[[LoginResponseProto_LoginConstants_RoundConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_LoginConstants_RoundConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginResponseProto_LoginConstants_RoundConstants*)[[[LoginResponseProto_LoginConstants_RoundConstants builder] mergeFromCodedInputStream:input] build];
}
+ (LoginResponseProto_LoginConstants_RoundConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto_LoginConstants_RoundConstants*)[[[LoginResponseProto_LoginConstants_RoundConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_LoginConstants_RoundConstants_Builder*) builder {
  return [[[LoginResponseProto_LoginConstants_RoundConstants_Builder alloc] init] autorelease];
}
+ (LoginResponseProto_LoginConstants_RoundConstants_Builder*) builderWithPrototype:(LoginResponseProto_LoginConstants_RoundConstants*) prototype {
  return [[LoginResponseProto_LoginConstants_RoundConstants builder] mergeFrom:prototype];
}
- (LoginResponseProto_LoginConstants_RoundConstants_Builder*) builder {
  return [LoginResponseProto_LoginConstants_RoundConstants builder];
}
@end

@interface LoginResponseProto_LoginConstants_RoundConstants_Builder()
@property (retain) LoginResponseProto_LoginConstants_RoundConstants* result;
@end

@implementation LoginResponseProto_LoginConstants_RoundConstants_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LoginResponseProto_LoginConstants_RoundConstants alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoginResponseProto_LoginConstants_RoundConstants_Builder*) clear {
  self.result = [[[LoginResponseProto_LoginConstants_RoundConstants alloc] init] autorelease];
  return self;
}
- (LoginResponseProto_LoginConstants_RoundConstants_Builder*) clone {
  return [LoginResponseProto_LoginConstants_RoundConstants builderWithPrototype:result];
}
- (LoginResponseProto_LoginConstants_RoundConstants*) defaultInstance {
  return [LoginResponseProto_LoginConstants_RoundConstants defaultInstance];
}
- (LoginResponseProto_LoginConstants_RoundConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginResponseProto_LoginConstants_RoundConstants*) buildPartial {
  LoginResponseProto_LoginConstants_RoundConstants* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LoginResponseProto_LoginConstants_RoundConstants_Builder*) mergeFrom:(LoginResponseProto_LoginConstants_RoundConstants*) other {
  if (other == [LoginResponseProto_LoginConstants_RoundConstants defaultInstance]) {
    return self;
  }
  if (other.hasDefaultRoundsPerGame) {
    [self setDefaultRoundsPerGame:other.defaultRoundsPerGame];
  }
  if (other.hasDefaultMinutesPerRound) {
    [self setDefaultMinutesPerRound:other.defaultMinutesPerRound];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginResponseProto_LoginConstants_RoundConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginResponseProto_LoginConstants_RoundConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDefaultRoundsPerGame:[input readInt32]];
        break;
      }
      case 16: {
        [self setDefaultMinutesPerRound:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasDefaultRoundsPerGame {
  return result.hasDefaultRoundsPerGame;
}
- (int32_t) defaultRoundsPerGame {
  return result.defaultRoundsPerGame;
}
- (LoginResponseProto_LoginConstants_RoundConstants_Builder*) setDefaultRoundsPerGame:(int32_t) value {
  result.hasDefaultRoundsPerGame = YES;
  result.defaultRoundsPerGame = value;
  return self;
}
- (LoginResponseProto_LoginConstants_RoundConstants_Builder*) clearDefaultRoundsPerGame {
  result.hasDefaultRoundsPerGame = NO;
  result.defaultRoundsPerGame = 0;
  return self;
}
- (BOOL) hasDefaultMinutesPerRound {
  return result.hasDefaultMinutesPerRound;
}
- (int32_t) defaultMinutesPerRound {
  return result.defaultMinutesPerRound;
}
- (LoginResponseProto_LoginConstants_RoundConstants_Builder*) setDefaultMinutesPerRound:(int32_t) value {
  result.hasDefaultMinutesPerRound = YES;
  result.defaultMinutesPerRound = value;
  return self;
}
- (LoginResponseProto_LoginConstants_RoundConstants_Builder*) clearDefaultMinutesPerRound {
  result.hasDefaultMinutesPerRound = NO;
  result.defaultMinutesPerRound = 0;
  return self;
}
@end

@interface LoginResponseProto_LoginConstants_QuestionTypeScoringConstants ()
@property int32_t mcqCorrect;
@property int32_t mcqIncorrect;
@property int32_t acqCorrect;
@property int32_t acqIncorrect;
@end

@implementation LoginResponseProto_LoginConstants_QuestionTypeScoringConstants

- (BOOL) hasMcqCorrect {
  return !!hasMcqCorrect_;
}
- (void) setHasMcqCorrect:(BOOL) value {
  hasMcqCorrect_ = !!value;
}
@synthesize mcqCorrect;
- (BOOL) hasMcqIncorrect {
  return !!hasMcqIncorrect_;
}
- (void) setHasMcqIncorrect:(BOOL) value {
  hasMcqIncorrect_ = !!value;
}
@synthesize mcqIncorrect;
- (BOOL) hasAcqCorrect {
  return !!hasAcqCorrect_;
}
- (void) setHasAcqCorrect:(BOOL) value {
  hasAcqCorrect_ = !!value;
}
@synthesize acqCorrect;
- (BOOL) hasAcqIncorrect {
  return !!hasAcqIncorrect_;
}
- (void) setHasAcqIncorrect:(BOOL) value {
  hasAcqIncorrect_ = !!value;
}
@synthesize acqIncorrect;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.mcqCorrect = 0;
    self.mcqIncorrect = 0;
    self.acqCorrect = 0;
    self.acqIncorrect = 0;
  }
  return self;
}
static LoginResponseProto_LoginConstants_QuestionTypeScoringConstants* defaultLoginResponseProto_LoginConstants_QuestionTypeScoringConstantsInstance = nil;
+ (void) initialize {
  if (self == [LoginResponseProto_LoginConstants_QuestionTypeScoringConstants class]) {
    defaultLoginResponseProto_LoginConstants_QuestionTypeScoringConstantsInstance = [[LoginResponseProto_LoginConstants_QuestionTypeScoringConstants alloc] init];
  }
}
+ (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) defaultInstance {
  return defaultLoginResponseProto_LoginConstants_QuestionTypeScoringConstantsInstance;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) defaultInstance {
  return defaultLoginResponseProto_LoginConstants_QuestionTypeScoringConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMcqCorrect) {
    [output writeInt32:1 value:self.mcqCorrect];
  }
  if (self.hasMcqIncorrect) {
    [output writeInt32:2 value:self.mcqIncorrect];
  }
  if (self.hasAcqCorrect) {
    [output writeInt32:3 value:self.acqCorrect];
  }
  if (self.hasAcqIncorrect) {
    [output writeInt32:4 value:self.acqIncorrect];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMcqCorrect) {
    size += computeInt32Size(1, self.mcqCorrect);
  }
  if (self.hasMcqIncorrect) {
    size += computeInt32Size(2, self.mcqIncorrect);
  }
  if (self.hasAcqCorrect) {
    size += computeInt32Size(3, self.acqCorrect);
  }
  if (self.hasAcqIncorrect) {
    size += computeInt32Size(4, self.acqIncorrect);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) parseFromData:(NSData*) data {
  return (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*)[[[LoginResponseProto_LoginConstants_QuestionTypeScoringConstants builder] mergeFromData:data] build];
}
+ (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*)[[[LoginResponseProto_LoginConstants_QuestionTypeScoringConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) parseFromInputStream:(NSInputStream*) input {
  return (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*)[[[LoginResponseProto_LoginConstants_QuestionTypeScoringConstants builder] mergeFromInputStream:input] build];
}
+ (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*)[[[LoginResponseProto_LoginConstants_QuestionTypeScoringConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*)[[[LoginResponseProto_LoginConstants_QuestionTypeScoringConstants builder] mergeFromCodedInputStream:input] build];
}
+ (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*)[[[LoginResponseProto_LoginConstants_QuestionTypeScoringConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) builder {
  return [[[LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder alloc] init] autorelease];
}
+ (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) builderWithPrototype:(LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) prototype {
  return [[LoginResponseProto_LoginConstants_QuestionTypeScoringConstants builder] mergeFrom:prototype];
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) builder {
  return [LoginResponseProto_LoginConstants_QuestionTypeScoringConstants builder];
}
@end

@interface LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder()
@property (retain) LoginResponseProto_LoginConstants_QuestionTypeScoringConstants* result;
@end

@implementation LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LoginResponseProto_LoginConstants_QuestionTypeScoringConstants alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) clear {
  self.result = [[[LoginResponseProto_LoginConstants_QuestionTypeScoringConstants alloc] init] autorelease];
  return self;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) clone {
  return [LoginResponseProto_LoginConstants_QuestionTypeScoringConstants builderWithPrototype:result];
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) defaultInstance {
  return [LoginResponseProto_LoginConstants_QuestionTypeScoringConstants defaultInstance];
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) buildPartial {
  LoginResponseProto_LoginConstants_QuestionTypeScoringConstants* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) mergeFrom:(LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) other {
  if (other == [LoginResponseProto_LoginConstants_QuestionTypeScoringConstants defaultInstance]) {
    return self;
  }
  if (other.hasMcqCorrect) {
    [self setMcqCorrect:other.mcqCorrect];
  }
  if (other.hasMcqIncorrect) {
    [self setMcqIncorrect:other.mcqIncorrect];
  }
  if (other.hasAcqCorrect) {
    [self setAcqCorrect:other.acqCorrect];
  }
  if (other.hasAcqIncorrect) {
    [self setAcqIncorrect:other.acqIncorrect];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMcqCorrect:[input readInt32]];
        break;
      }
      case 16: {
        [self setMcqIncorrect:[input readInt32]];
        break;
      }
      case 24: {
        [self setAcqCorrect:[input readInt32]];
        break;
      }
      case 32: {
        [self setAcqIncorrect:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMcqCorrect {
  return result.hasMcqCorrect;
}
- (int32_t) mcqCorrect {
  return result.mcqCorrect;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) setMcqCorrect:(int32_t) value {
  result.hasMcqCorrect = YES;
  result.mcqCorrect = value;
  return self;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) clearMcqCorrect {
  result.hasMcqCorrect = NO;
  result.mcqCorrect = 0;
  return self;
}
- (BOOL) hasMcqIncorrect {
  return result.hasMcqIncorrect;
}
- (int32_t) mcqIncorrect {
  return result.mcqIncorrect;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) setMcqIncorrect:(int32_t) value {
  result.hasMcqIncorrect = YES;
  result.mcqIncorrect = value;
  return self;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) clearMcqIncorrect {
  result.hasMcqIncorrect = NO;
  result.mcqIncorrect = 0;
  return self;
}
- (BOOL) hasAcqCorrect {
  return result.hasAcqCorrect;
}
- (int32_t) acqCorrect {
  return result.acqCorrect;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) setAcqCorrect:(int32_t) value {
  result.hasAcqCorrect = YES;
  result.acqCorrect = value;
  return self;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) clearAcqCorrect {
  result.hasAcqCorrect = NO;
  result.acqCorrect = 0;
  return self;
}
- (BOOL) hasAcqIncorrect {
  return result.hasAcqIncorrect;
}
- (int32_t) acqIncorrect {
  return result.acqIncorrect;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) setAcqIncorrect:(int32_t) value {
  result.hasAcqIncorrect = YES;
  result.acqIncorrect = value;
  return self;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) clearAcqIncorrect {
  result.hasAcqIncorrect = NO;
  result.acqIncorrect = 0;
  return self;
}
@end

@interface LoginResponseProto_LoginConstants_Builder()
@property (retain) LoginResponseProto_LoginConstants* result;
@end

@implementation LoginResponseProto_LoginConstants_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LoginResponseProto_LoginConstants alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoginResponseProto_LoginConstants_Builder*) clear {
  self.result = [[[LoginResponseProto_LoginConstants alloc] init] autorelease];
  return self;
}
- (LoginResponseProto_LoginConstants_Builder*) clone {
  return [LoginResponseProto_LoginConstants builderWithPrototype:result];
}
- (LoginResponseProto_LoginConstants*) defaultInstance {
  return [LoginResponseProto_LoginConstants defaultInstance];
}
- (LoginResponseProto_LoginConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginResponseProto_LoginConstants*) buildPartial {
  LoginResponseProto_LoginConstants* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LoginResponseProto_LoginConstants_Builder*) mergeFrom:(LoginResponseProto_LoginConstants*) other {
  if (other == [LoginResponseProto_LoginConstants defaultInstance]) {
    return self;
  }
  if (other.hasCurrencyConstants) {
    [self mergeCurrencyConstants:other.currencyConstants];
  }
  if (other.hasRoundConstants) {
    [self mergeRoundConstants:other.roundConstants];
  }
  if (other.hasScoreTypes) {
    [self mergeScoreTypes:other.scoreTypes];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginResponseProto_LoginConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginResponseProto_LoginConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        LoginResponseProto_LoginConstants_CurrencyConstants_Builder* subBuilder = [LoginResponseProto_LoginConstants_CurrencyConstants builder];
        if (self.hasCurrencyConstants) {
          [subBuilder mergeFrom:self.currencyConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCurrencyConstants:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        LoginResponseProto_LoginConstants_RoundConstants_Builder* subBuilder = [LoginResponseProto_LoginConstants_RoundConstants builder];
        if (self.hasRoundConstants) {
          [subBuilder mergeFrom:self.roundConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRoundConstants:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder* subBuilder = [LoginResponseProto_LoginConstants_QuestionTypeScoringConstants builder];
        if (self.hasScoreTypes) {
          [subBuilder mergeFrom:self.scoreTypes];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setScoreTypes:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCurrencyConstants {
  return result.hasCurrencyConstants;
}
- (LoginResponseProto_LoginConstants_CurrencyConstants*) currencyConstants {
  return result.currencyConstants;
}
- (LoginResponseProto_LoginConstants_Builder*) setCurrencyConstants:(LoginResponseProto_LoginConstants_CurrencyConstants*) value {
  result.hasCurrencyConstants = YES;
  result.currencyConstants = value;
  return self;
}
- (LoginResponseProto_LoginConstants_Builder*) setCurrencyConstantsBuilder:(LoginResponseProto_LoginConstants_CurrencyConstants_Builder*) builderForValue {
  return [self setCurrencyConstants:[builderForValue build]];
}
- (LoginResponseProto_LoginConstants_Builder*) mergeCurrencyConstants:(LoginResponseProto_LoginConstants_CurrencyConstants*) value {
  if (result.hasCurrencyConstants &&
      result.currencyConstants != [LoginResponseProto_LoginConstants_CurrencyConstants defaultInstance]) {
    result.currencyConstants =
      [[[LoginResponseProto_LoginConstants_CurrencyConstants builderWithPrototype:result.currencyConstants] mergeFrom:value] buildPartial];
  } else {
    result.currencyConstants = value;
  }
  result.hasCurrencyConstants = YES;
  return self;
}
- (LoginResponseProto_LoginConstants_Builder*) clearCurrencyConstants {
  result.hasCurrencyConstants = NO;
  result.currencyConstants = [LoginResponseProto_LoginConstants_CurrencyConstants defaultInstance];
  return self;
}
- (BOOL) hasRoundConstants {
  return result.hasRoundConstants;
}
- (LoginResponseProto_LoginConstants_RoundConstants*) roundConstants {
  return result.roundConstants;
}
- (LoginResponseProto_LoginConstants_Builder*) setRoundConstants:(LoginResponseProto_LoginConstants_RoundConstants*) value {
  result.hasRoundConstants = YES;
  result.roundConstants = value;
  return self;
}
- (LoginResponseProto_LoginConstants_Builder*) setRoundConstantsBuilder:(LoginResponseProto_LoginConstants_RoundConstants_Builder*) builderForValue {
  return [self setRoundConstants:[builderForValue build]];
}
- (LoginResponseProto_LoginConstants_Builder*) mergeRoundConstants:(LoginResponseProto_LoginConstants_RoundConstants*) value {
  if (result.hasRoundConstants &&
      result.roundConstants != [LoginResponseProto_LoginConstants_RoundConstants defaultInstance]) {
    result.roundConstants =
      [[[LoginResponseProto_LoginConstants_RoundConstants builderWithPrototype:result.roundConstants] mergeFrom:value] buildPartial];
  } else {
    result.roundConstants = value;
  }
  result.hasRoundConstants = YES;
  return self;
}
- (LoginResponseProto_LoginConstants_Builder*) clearRoundConstants {
  result.hasRoundConstants = NO;
  result.roundConstants = [LoginResponseProto_LoginConstants_RoundConstants defaultInstance];
  return self;
}
- (BOOL) hasScoreTypes {
  return result.hasScoreTypes;
}
- (LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) scoreTypes {
  return result.scoreTypes;
}
- (LoginResponseProto_LoginConstants_Builder*) setScoreTypes:(LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) value {
  result.hasScoreTypes = YES;
  result.scoreTypes = value;
  return self;
}
- (LoginResponseProto_LoginConstants_Builder*) setScoreTypesBuilder:(LoginResponseProto_LoginConstants_QuestionTypeScoringConstants_Builder*) builderForValue {
  return [self setScoreTypes:[builderForValue build]];
}
- (LoginResponseProto_LoginConstants_Builder*) mergeScoreTypes:(LoginResponseProto_LoginConstants_QuestionTypeScoringConstants*) value {
  if (result.hasScoreTypes &&
      result.scoreTypes != [LoginResponseProto_LoginConstants_QuestionTypeScoringConstants defaultInstance]) {
    result.scoreTypes =
      [[[LoginResponseProto_LoginConstants_QuestionTypeScoringConstants builderWithPrototype:result.scoreTypes] mergeFrom:value] buildPartial];
  } else {
    result.scoreTypes = value;
  }
  result.hasScoreTypes = YES;
  return self;
}
- (LoginResponseProto_LoginConstants_Builder*) clearScoreTypes {
  result.hasScoreTypes = NO;
  result.scoreTypes = [LoginResponseProto_LoginConstants_QuestionTypeScoringConstants defaultInstance];
  return self;
}
@end

@interface LoginResponseProto_Builder()
@property (retain) LoginResponseProto* result;
@end

@implementation LoginResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LoginResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoginResponseProto_Builder*) clear {
  self.result = [[[LoginResponseProto alloc] init] autorelease];
  return self;
}
- (LoginResponseProto_Builder*) clone {
  return [LoginResponseProto builderWithPrototype:result];
}
- (LoginResponseProto*) defaultInstance {
  return [LoginResponseProto defaultInstance];
}
- (LoginResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginResponseProto*) buildPartial {
  LoginResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LoginResponseProto_Builder*) mergeFrom:(LoginResponseProto*) other {
  if (other == [LoginResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasRecipient) {
    [self mergeRecipient:other.recipient];
  }
  if (other.mutableCompletedGamesList.count > 0) {
    if (result.mutableCompletedGamesList == nil) {
      result.mutableCompletedGamesList = [NSMutableArray array];
    }
    [result.mutableCompletedGamesList addObjectsFromArray:other.mutableCompletedGamesList];
  }
  if (other.mutableMyTurnList.count > 0) {
    if (result.mutableMyTurnList == nil) {
      result.mutableMyTurnList = [NSMutableArray array];
    }
    [result.mutableMyTurnList addObjectsFromArray:other.mutableMyTurnList];
  }
  if (other.mutableNotMyTurnList.count > 0) {
    if (result.mutableNotMyTurnList == nil) {
      result.mutableNotMyTurnList = [NSMutableArray array];
    }
    [result.mutableNotMyTurnList addObjectsFromArray:other.mutableNotMyTurnList];
  }
  if (other.mutableNewQuestionsList.count > 0) {
    if (result.mutableNewQuestionsList == nil) {
      result.mutableNewQuestionsList = [NSMutableArray array];
    }
    [result.mutableNewQuestionsList addObjectsFromArray:other.mutableNewQuestionsList];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.mutableFacebookFriendsWithAccountsList.count > 0) {
    if (result.mutableFacebookFriendsWithAccountsList == nil) {
      result.mutableFacebookFriendsWithAccountsList = [NSMutableArray array];
    }
    [result.mutableFacebookFriendsWithAccountsList addObjectsFromArray:other.mutableFacebookFriendsWithAccountsList];
  }
  if (other.mutablePictureNamesList.count > 0) {
    if (result.mutablePictureNamesList == nil) {
      result.mutablePictureNamesList = [NSMutableArray array];
    }
    [result.mutablePictureNamesList addObjectsFromArray:other.mutablePictureNamesList];
  }
  if (other.hasLoginConstants) {
    [self mergeLoginConstants:other.loginConstants];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CompleteUserProto_Builder* subBuilder = [CompleteUserProto builder];
        if (self.hasRecipient) {
          [subBuilder mergeFrom:self.recipient];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecipient:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        GameResultsProto_Builder* subBuilder = [GameResultsProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCompletedGames:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        OngoingGameProto_Builder* subBuilder = [OngoingGameProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMyTurn:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        OngoingGameProto_Builder* subBuilder = [OngoingGameProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNotMyTurn:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        QuestionProto_Builder* subBuilder = [QuestionProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNewQuestions:[subBuilder buildPartial]];
        break;
      }
      case 48: {
        int32_t value = [input readEnum];
        if (LoginResponseProto_LoginResponseStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 58: {
        BasicUserProto_Builder* subBuilder = [BasicUserProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFacebookFriendsWithAccounts:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        [self addPictureNames:[input readString]];
        break;
      }
      case 74: {
        LoginResponseProto_LoginConstants_Builder* subBuilder = [LoginResponseProto_LoginConstants builder];
        if (self.hasLoginConstants) {
          [subBuilder mergeFrom:self.loginConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLoginConstants:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRecipient {
  return result.hasRecipient;
}
- (CompleteUserProto*) recipient {
  return result.recipient;
}
- (LoginResponseProto_Builder*) setRecipient:(CompleteUserProto*) value {
  result.hasRecipient = YES;
  result.recipient = value;
  return self;
}
- (LoginResponseProto_Builder*) setRecipientBuilder:(CompleteUserProto_Builder*) builderForValue {
  return [self setRecipient:[builderForValue build]];
}
- (LoginResponseProto_Builder*) mergeRecipient:(CompleteUserProto*) value {
  if (result.hasRecipient &&
      result.recipient != [CompleteUserProto defaultInstance]) {
    result.recipient =
      [[[CompleteUserProto builderWithPrototype:result.recipient] mergeFrom:value] buildPartial];
  } else {
    result.recipient = value;
  }
  result.hasRecipient = YES;
  return self;
}
- (LoginResponseProto_Builder*) clearRecipient {
  result.hasRecipient = NO;
  result.recipient = [CompleteUserProto defaultInstance];
  return self;
}
- (NSArray*) completedGamesList {
  if (result.mutableCompletedGamesList == nil) { return [NSArray array]; }
  return result.mutableCompletedGamesList;
}
- (GameResultsProto*) completedGamesAtIndex:(int32_t) index {
  return [result completedGamesAtIndex:index];
}
- (LoginResponseProto_Builder*) replaceCompletedGamesAtIndex:(int32_t) index with:(GameResultsProto*) value {
  [result.mutableCompletedGamesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (LoginResponseProto_Builder*) addAllCompletedGames:(NSArray*) values {
  if (result.mutableCompletedGamesList == nil) {
    result.mutableCompletedGamesList = [NSMutableArray array];
  }
  [result.mutableCompletedGamesList addObjectsFromArray:values];
  return self;
}
- (LoginResponseProto_Builder*) clearCompletedGamesList {
  result.mutableCompletedGamesList = nil;
  return self;
}
- (LoginResponseProto_Builder*) addCompletedGames:(GameResultsProto*) value {
  if (result.mutableCompletedGamesList == nil) {
    result.mutableCompletedGamesList = [NSMutableArray array];
  }
  [result.mutableCompletedGamesList addObject:value];
  return self;
}
- (NSArray*) myTurnList {
  if (result.mutableMyTurnList == nil) { return [NSArray array]; }
  return result.mutableMyTurnList;
}
- (OngoingGameProto*) myTurnAtIndex:(int32_t) index {
  return [result myTurnAtIndex:index];
}
- (LoginResponseProto_Builder*) replaceMyTurnAtIndex:(int32_t) index with:(OngoingGameProto*) value {
  [result.mutableMyTurnList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (LoginResponseProto_Builder*) addAllMyTurn:(NSArray*) values {
  if (result.mutableMyTurnList == nil) {
    result.mutableMyTurnList = [NSMutableArray array];
  }
  [result.mutableMyTurnList addObjectsFromArray:values];
  return self;
}
- (LoginResponseProto_Builder*) clearMyTurnList {
  result.mutableMyTurnList = nil;
  return self;
}
- (LoginResponseProto_Builder*) addMyTurn:(OngoingGameProto*) value {
  if (result.mutableMyTurnList == nil) {
    result.mutableMyTurnList = [NSMutableArray array];
  }
  [result.mutableMyTurnList addObject:value];
  return self;
}
- (NSArray*) notMyTurnList {
  if (result.mutableNotMyTurnList == nil) { return [NSArray array]; }
  return result.mutableNotMyTurnList;
}
- (OngoingGameProto*) notMyTurnAtIndex:(int32_t) index {
  return [result notMyTurnAtIndex:index];
}
- (LoginResponseProto_Builder*) replaceNotMyTurnAtIndex:(int32_t) index with:(OngoingGameProto*) value {
  [result.mutableNotMyTurnList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (LoginResponseProto_Builder*) addAllNotMyTurn:(NSArray*) values {
  if (result.mutableNotMyTurnList == nil) {
    result.mutableNotMyTurnList = [NSMutableArray array];
  }
  [result.mutableNotMyTurnList addObjectsFromArray:values];
  return self;
}
- (LoginResponseProto_Builder*) clearNotMyTurnList {
  result.mutableNotMyTurnList = nil;
  return self;
}
- (LoginResponseProto_Builder*) addNotMyTurn:(OngoingGameProto*) value {
  if (result.mutableNotMyTurnList == nil) {
    result.mutableNotMyTurnList = [NSMutableArray array];
  }
  [result.mutableNotMyTurnList addObject:value];
  return self;
}
- (NSArray*) newQuestionsList {
  if (result.mutableNewQuestionsList == nil) { return [NSArray array]; }
  return result.mutableNewQuestionsList;
}
- (QuestionProto*) newQuestionsAtIndex:(int32_t) index {
  return [result newQuestionsAtIndex:index];
}
- (LoginResponseProto_Builder*) replaceNewQuestionsAtIndex:(int32_t) index with:(QuestionProto*) value {
  [result.mutableNewQuestionsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (LoginResponseProto_Builder*) addAllNewQuestions:(NSArray*) values {
  if (result.mutableNewQuestionsList == nil) {
    result.mutableNewQuestionsList = [NSMutableArray array];
  }
  [result.mutableNewQuestionsList addObjectsFromArray:values];
  return self;
}
- (LoginResponseProto_Builder*) clearNewQuestionsList {
  result.mutableNewQuestionsList = nil;
  return self;
}
- (LoginResponseProto_Builder*) addNewQuestions:(QuestionProto*) value {
  if (result.mutableNewQuestionsList == nil) {
    result.mutableNewQuestionsList = [NSMutableArray array];
  }
  [result.mutableNewQuestionsList addObject:value];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (LoginResponseProto_LoginResponseStatus) status {
  return result.status;
}
- (LoginResponseProto_Builder*) setStatus:(LoginResponseProto_LoginResponseStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (LoginResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = LoginResponseProto_LoginResponseStatusSuccessLoginToken;
  return self;
}
- (NSArray*) facebookFriendsWithAccountsList {
  if (result.mutableFacebookFriendsWithAccountsList == nil) { return [NSArray array]; }
  return result.mutableFacebookFriendsWithAccountsList;
}
- (BasicUserProto*) facebookFriendsWithAccountsAtIndex:(int32_t) index {
  return [result facebookFriendsWithAccountsAtIndex:index];
}
- (LoginResponseProto_Builder*) replaceFacebookFriendsWithAccountsAtIndex:(int32_t) index with:(BasicUserProto*) value {
  [result.mutableFacebookFriendsWithAccountsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (LoginResponseProto_Builder*) addAllFacebookFriendsWithAccounts:(NSArray*) values {
  if (result.mutableFacebookFriendsWithAccountsList == nil) {
    result.mutableFacebookFriendsWithAccountsList = [NSMutableArray array];
  }
  [result.mutableFacebookFriendsWithAccountsList addObjectsFromArray:values];
  return self;
}
- (LoginResponseProto_Builder*) clearFacebookFriendsWithAccountsList {
  result.mutableFacebookFriendsWithAccountsList = nil;
  return self;
}
- (LoginResponseProto_Builder*) addFacebookFriendsWithAccounts:(BasicUserProto*) value {
  if (result.mutableFacebookFriendsWithAccountsList == nil) {
    result.mutableFacebookFriendsWithAccountsList = [NSMutableArray array];
  }
  [result.mutableFacebookFriendsWithAccountsList addObject:value];
  return self;
}
- (NSArray*) pictureNamesList {
  if (result.mutablePictureNamesList == nil) {
    return [NSArray array];
  }
  return result.mutablePictureNamesList;
}
- (NSString*) pictureNamesAtIndex:(int32_t) index {
  return [result pictureNamesAtIndex:index];
}
- (LoginResponseProto_Builder*) replacePictureNamesAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutablePictureNamesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (LoginResponseProto_Builder*) addPictureNames:(NSString*) value {
  if (result.mutablePictureNamesList == nil) {
    result.mutablePictureNamesList = [NSMutableArray array];
  }
  [result.mutablePictureNamesList addObject:value];
  return self;
}
- (LoginResponseProto_Builder*) addAllPictureNames:(NSArray*) values {
  if (result.mutablePictureNamesList == nil) {
    result.mutablePictureNamesList = [NSMutableArray array];
  }
  [result.mutablePictureNamesList addObjectsFromArray:values];
  return self;
}
- (LoginResponseProto_Builder*) clearPictureNamesList {
  result.mutablePictureNamesList = nil;
  return self;
}
- (BOOL) hasLoginConstants {
  return result.hasLoginConstants;
}
- (LoginResponseProto_LoginConstants*) loginConstants {
  return result.loginConstants;
}
- (LoginResponseProto_Builder*) setLoginConstants:(LoginResponseProto_LoginConstants*) value {
  result.hasLoginConstants = YES;
  result.loginConstants = value;
  return self;
}
- (LoginResponseProto_Builder*) setLoginConstantsBuilder:(LoginResponseProto_LoginConstants_Builder*) builderForValue {
  return [self setLoginConstants:[builderForValue build]];
}
- (LoginResponseProto_Builder*) mergeLoginConstants:(LoginResponseProto_LoginConstants*) value {
  if (result.hasLoginConstants &&
      result.loginConstants != [LoginResponseProto_LoginConstants defaultInstance]) {
    result.loginConstants =
      [[[LoginResponseProto_LoginConstants builderWithPrototype:result.loginConstants] mergeFrom:value] buildPartial];
  } else {
    result.loginConstants = value;
  }
  result.hasLoginConstants = YES;
  return self;
}
- (LoginResponseProto_Builder*) clearLoginConstants {
  result.hasLoginConstants = NO;
  result.loginConstants = [LoginResponseProto_LoginConstants defaultInstance];
  return self;
}
@end

