// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "RefillTokensByWaitingEvent.pb.h"

@implementation RefillTokensByWaitingEventRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [RefillTokensByWaitingEventRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface RefillTokensByWaitingRequestProto ()
@property (retain) BasicUserProto* sender;
@property int64_t curTime;
@end

@implementation RefillTokensByWaitingRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasCurTime {
  return !!hasCurTime_;
}
- (void) setHasCurTime:(BOOL) value {
  hasCurTime_ = !!value;
}
@synthesize curTime;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [BasicUserProto defaultInstance];
    self.curTime = 0L;
  }
  return self;
}
static RefillTokensByWaitingRequestProto* defaultRefillTokensByWaitingRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RefillTokensByWaitingRequestProto class]) {
    defaultRefillTokensByWaitingRequestProtoInstance = [[RefillTokensByWaitingRequestProto alloc] init];
  }
}
+ (RefillTokensByWaitingRequestProto*) defaultInstance {
  return defaultRefillTokensByWaitingRequestProtoInstance;
}
- (RefillTokensByWaitingRequestProto*) defaultInstance {
  return defaultRefillTokensByWaitingRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasCurTime) {
    [output writeInt64:2 value:self.curTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasCurTime) {
    size += computeInt64Size(2, self.curTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RefillTokensByWaitingRequestProto*) parseFromData:(NSData*) data {
  return (RefillTokensByWaitingRequestProto*)[[[RefillTokensByWaitingRequestProto builder] mergeFromData:data] build];
}
+ (RefillTokensByWaitingRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RefillTokensByWaitingRequestProto*)[[[RefillTokensByWaitingRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RefillTokensByWaitingRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RefillTokensByWaitingRequestProto*)[[[RefillTokensByWaitingRequestProto builder] mergeFromInputStream:input] build];
}
+ (RefillTokensByWaitingRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RefillTokensByWaitingRequestProto*)[[[RefillTokensByWaitingRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RefillTokensByWaitingRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RefillTokensByWaitingRequestProto*)[[[RefillTokensByWaitingRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RefillTokensByWaitingRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RefillTokensByWaitingRequestProto*)[[[RefillTokensByWaitingRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RefillTokensByWaitingRequestProto_Builder*) builder {
  return [[[RefillTokensByWaitingRequestProto_Builder alloc] init] autorelease];
}
+ (RefillTokensByWaitingRequestProto_Builder*) builderWithPrototype:(RefillTokensByWaitingRequestProto*) prototype {
  return [[RefillTokensByWaitingRequestProto builder] mergeFrom:prototype];
}
- (RefillTokensByWaitingRequestProto_Builder*) builder {
  return [RefillTokensByWaitingRequestProto builder];
}
@end

@interface RefillTokensByWaitingRequestProto_Builder()
@property (retain) RefillTokensByWaitingRequestProto* result;
@end

@implementation RefillTokensByWaitingRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RefillTokensByWaitingRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RefillTokensByWaitingRequestProto_Builder*) clear {
  self.result = [[[RefillTokensByWaitingRequestProto alloc] init] autorelease];
  return self;
}
- (RefillTokensByWaitingRequestProto_Builder*) clone {
  return [RefillTokensByWaitingRequestProto builderWithPrototype:result];
}
- (RefillTokensByWaitingRequestProto*) defaultInstance {
  return [RefillTokensByWaitingRequestProto defaultInstance];
}
- (RefillTokensByWaitingRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RefillTokensByWaitingRequestProto*) buildPartial {
  RefillTokensByWaitingRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RefillTokensByWaitingRequestProto_Builder*) mergeFrom:(RefillTokensByWaitingRequestProto*) other {
  if (other == [RefillTokensByWaitingRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasCurTime) {
    [self setCurTime:other.curTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RefillTokensByWaitingRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RefillTokensByWaitingRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BasicUserProto_Builder* subBuilder = [BasicUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setCurTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (BasicUserProto*) sender {
  return result.sender;
}
- (RefillTokensByWaitingRequestProto_Builder*) setSender:(BasicUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RefillTokensByWaitingRequestProto_Builder*) setSenderBuilder:(BasicUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RefillTokensByWaitingRequestProto_Builder*) mergeSender:(BasicUserProto*) value {
  if (result.hasSender &&
      result.sender != [BasicUserProto defaultInstance]) {
    result.sender =
      [[[BasicUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RefillTokensByWaitingRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [BasicUserProto defaultInstance];
  return self;
}
- (BOOL) hasCurTime {
  return result.hasCurTime;
}
- (int64_t) curTime {
  return result.curTime;
}
- (RefillTokensByWaitingRequestProto_Builder*) setCurTime:(int64_t) value {
  result.hasCurTime = YES;
  result.curTime = value;
  return self;
}
- (RefillTokensByWaitingRequestProto_Builder*) clearCurTime {
  result.hasCurTime = NO;
  result.curTime = 0L;
  return self;
}
@end

@interface RefillTokensByWaitingResponseProto ()
@property (retain) BasicUserProto* recipient;
@property RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatus status;
@end

@implementation RefillTokensByWaitingResponseProto

- (BOOL) hasRecipient {
  return !!hasRecipient_;
}
- (void) setHasRecipient:(BOOL) value {
  hasRecipient_ = !!value;
}
@synthesize recipient;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.recipient = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.recipient = [BasicUserProto defaultInstance];
    self.status = RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatusSuccess;
  }
  return self;
}
static RefillTokensByWaitingResponseProto* defaultRefillTokensByWaitingResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RefillTokensByWaitingResponseProto class]) {
    defaultRefillTokensByWaitingResponseProtoInstance = [[RefillTokensByWaitingResponseProto alloc] init];
  }
}
+ (RefillTokensByWaitingResponseProto*) defaultInstance {
  return defaultRefillTokensByWaitingResponseProtoInstance;
}
- (RefillTokensByWaitingResponseProto*) defaultInstance {
  return defaultRefillTokensByWaitingResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRecipient) {
    [output writeMessage:1 value:self.recipient];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRecipient) {
    size += computeMessageSize(1, self.recipient);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RefillTokensByWaitingResponseProto*) parseFromData:(NSData*) data {
  return (RefillTokensByWaitingResponseProto*)[[[RefillTokensByWaitingResponseProto builder] mergeFromData:data] build];
}
+ (RefillTokensByWaitingResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RefillTokensByWaitingResponseProto*)[[[RefillTokensByWaitingResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RefillTokensByWaitingResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RefillTokensByWaitingResponseProto*)[[[RefillTokensByWaitingResponseProto builder] mergeFromInputStream:input] build];
}
+ (RefillTokensByWaitingResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RefillTokensByWaitingResponseProto*)[[[RefillTokensByWaitingResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RefillTokensByWaitingResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RefillTokensByWaitingResponseProto*)[[[RefillTokensByWaitingResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RefillTokensByWaitingResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RefillTokensByWaitingResponseProto*)[[[RefillTokensByWaitingResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RefillTokensByWaitingResponseProto_Builder*) builder {
  return [[[RefillTokensByWaitingResponseProto_Builder alloc] init] autorelease];
}
+ (RefillTokensByWaitingResponseProto_Builder*) builderWithPrototype:(RefillTokensByWaitingResponseProto*) prototype {
  return [[RefillTokensByWaitingResponseProto builder] mergeFrom:prototype];
}
- (RefillTokensByWaitingResponseProto_Builder*) builder {
  return [RefillTokensByWaitingResponseProto builder];
}
@end

BOOL RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatusIsValidValue(RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatus value) {
  switch (value) {
    case RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatusSuccess:
    case RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatusFailNotReadyYet:
    case RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatusFailAlreadyMax:
    case RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatusFailClientTooApartFromServerTime:
    case RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatusFailOtherFail:
      return YES;
    default:
      return NO;
  }
}
@interface RefillTokensByWaitingResponseProto_Builder()
@property (retain) RefillTokensByWaitingResponseProto* result;
@end

@implementation RefillTokensByWaitingResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RefillTokensByWaitingResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RefillTokensByWaitingResponseProto_Builder*) clear {
  self.result = [[[RefillTokensByWaitingResponseProto alloc] init] autorelease];
  return self;
}
- (RefillTokensByWaitingResponseProto_Builder*) clone {
  return [RefillTokensByWaitingResponseProto builderWithPrototype:result];
}
- (RefillTokensByWaitingResponseProto*) defaultInstance {
  return [RefillTokensByWaitingResponseProto defaultInstance];
}
- (RefillTokensByWaitingResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RefillTokensByWaitingResponseProto*) buildPartial {
  RefillTokensByWaitingResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RefillTokensByWaitingResponseProto_Builder*) mergeFrom:(RefillTokensByWaitingResponseProto*) other {
  if (other == [RefillTokensByWaitingResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasRecipient) {
    [self mergeRecipient:other.recipient];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RefillTokensByWaitingResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RefillTokensByWaitingResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BasicUserProto_Builder* subBuilder = [BasicUserProto builder];
        if (self.hasRecipient) {
          [subBuilder mergeFrom:self.recipient];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecipient:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasRecipient {
  return result.hasRecipient;
}
- (BasicUserProto*) recipient {
  return result.recipient;
}
- (RefillTokensByWaitingResponseProto_Builder*) setRecipient:(BasicUserProto*) value {
  result.hasRecipient = YES;
  result.recipient = value;
  return self;
}
- (RefillTokensByWaitingResponseProto_Builder*) setRecipientBuilder:(BasicUserProto_Builder*) builderForValue {
  return [self setRecipient:[builderForValue build]];
}
- (RefillTokensByWaitingResponseProto_Builder*) mergeRecipient:(BasicUserProto*) value {
  if (result.hasRecipient &&
      result.recipient != [BasicUserProto defaultInstance]) {
    result.recipient =
      [[[BasicUserProto builderWithPrototype:result.recipient] mergeFrom:value] buildPartial];
  } else {
    result.recipient = value;
  }
  result.hasRecipient = YES;
  return self;
}
- (RefillTokensByWaitingResponseProto_Builder*) clearRecipient {
  result.hasRecipient = NO;
  result.recipient = [BasicUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatus) status {
  return result.status;
}
- (RefillTokensByWaitingResponseProto_Builder*) setStatus:(RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RefillTokensByWaitingResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RefillTokensByWaitingResponseProto_RefillTokensByWaitingStatusSuccess;
  return self;
}
@end

