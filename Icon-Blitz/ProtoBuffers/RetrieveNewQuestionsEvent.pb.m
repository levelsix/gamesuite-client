// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "RetrieveNewQuestionsEvent.pb.h"

@implementation RetrieveNewQuestionsEventRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [RetrieveNewQuestionsEventRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    [TriviaQuestionFormatRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface RetrieveNewQuestionsRequestProto ()
@property (retain) BasicUserProto* sender;
@property int32_t numQuestionsWanted;
@end

@implementation RetrieveNewQuestionsRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasNumQuestionsWanted {
  return !!hasNumQuestionsWanted_;
}
- (void) setHasNumQuestionsWanted:(BOOL) value {
  hasNumQuestionsWanted_ = !!value;
}
@synthesize numQuestionsWanted;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [BasicUserProto defaultInstance];
    self.numQuestionsWanted = 0;
  }
  return self;
}
static RetrieveNewQuestionsRequestProto* defaultRetrieveNewQuestionsRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveNewQuestionsRequestProto class]) {
    defaultRetrieveNewQuestionsRequestProtoInstance = [[RetrieveNewQuestionsRequestProto alloc] init];
  }
}
+ (RetrieveNewQuestionsRequestProto*) defaultInstance {
  return defaultRetrieveNewQuestionsRequestProtoInstance;
}
- (RetrieveNewQuestionsRequestProto*) defaultInstance {
  return defaultRetrieveNewQuestionsRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasNumQuestionsWanted) {
    [output writeInt32:2 value:self.numQuestionsWanted];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasNumQuestionsWanted) {
    size += computeInt32Size(2, self.numQuestionsWanted);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetrieveNewQuestionsRequestProto*) parseFromData:(NSData*) data {
  return (RetrieveNewQuestionsRequestProto*)[[[RetrieveNewQuestionsRequestProto builder] mergeFromData:data] build];
}
+ (RetrieveNewQuestionsRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveNewQuestionsRequestProto*)[[[RetrieveNewQuestionsRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveNewQuestionsRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveNewQuestionsRequestProto*)[[[RetrieveNewQuestionsRequestProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveNewQuestionsRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveNewQuestionsRequestProto*)[[[RetrieveNewQuestionsRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveNewQuestionsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveNewQuestionsRequestProto*)[[[RetrieveNewQuestionsRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveNewQuestionsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveNewQuestionsRequestProto*)[[[RetrieveNewQuestionsRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveNewQuestionsRequestProto_Builder*) builder {
  return [[[RetrieveNewQuestionsRequestProto_Builder alloc] init] autorelease];
}
+ (RetrieveNewQuestionsRequestProto_Builder*) builderWithPrototype:(RetrieveNewQuestionsRequestProto*) prototype {
  return [[RetrieveNewQuestionsRequestProto builder] mergeFrom:prototype];
}
- (RetrieveNewQuestionsRequestProto_Builder*) builder {
  return [RetrieveNewQuestionsRequestProto builder];
}
@end

@interface RetrieveNewQuestionsRequestProto_Builder()
@property (retain) RetrieveNewQuestionsRequestProto* result;
@end

@implementation RetrieveNewQuestionsRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetrieveNewQuestionsRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveNewQuestionsRequestProto_Builder*) clear {
  self.result = [[[RetrieveNewQuestionsRequestProto alloc] init] autorelease];
  return self;
}
- (RetrieveNewQuestionsRequestProto_Builder*) clone {
  return [RetrieveNewQuestionsRequestProto builderWithPrototype:result];
}
- (RetrieveNewQuestionsRequestProto*) defaultInstance {
  return [RetrieveNewQuestionsRequestProto defaultInstance];
}
- (RetrieveNewQuestionsRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveNewQuestionsRequestProto*) buildPartial {
  RetrieveNewQuestionsRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetrieveNewQuestionsRequestProto_Builder*) mergeFrom:(RetrieveNewQuestionsRequestProto*) other {
  if (other == [RetrieveNewQuestionsRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasNumQuestionsWanted) {
    [self setNumQuestionsWanted:other.numQuestionsWanted];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveNewQuestionsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveNewQuestionsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BasicUserProto_Builder* subBuilder = [BasicUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setNumQuestionsWanted:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (BasicUserProto*) sender {
  return result.sender;
}
- (RetrieveNewQuestionsRequestProto_Builder*) setSender:(BasicUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveNewQuestionsRequestProto_Builder*) setSenderBuilder:(BasicUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveNewQuestionsRequestProto_Builder*) mergeSender:(BasicUserProto*) value {
  if (result.hasSender &&
      result.sender != [BasicUserProto defaultInstance]) {
    result.sender =
      [[[BasicUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveNewQuestionsRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [BasicUserProto defaultInstance];
  return self;
}
- (BOOL) hasNumQuestionsWanted {
  return result.hasNumQuestionsWanted;
}
- (int32_t) numQuestionsWanted {
  return result.numQuestionsWanted;
}
- (RetrieveNewQuestionsRequestProto_Builder*) setNumQuestionsWanted:(int32_t) value {
  result.hasNumQuestionsWanted = YES;
  result.numQuestionsWanted = value;
  return self;
}
- (RetrieveNewQuestionsRequestProto_Builder*) clearNumQuestionsWanted {
  result.hasNumQuestionsWanted = NO;
  result.numQuestionsWanted = 0;
  return self;
}
@end

@interface RetrieveNewQuestionsResponseProto ()
@property (retain) BasicUserProto* recipient;
@property (retain) NSMutableArray* mutableNewQuestionsList;
@end

@implementation RetrieveNewQuestionsResponseProto

- (BOOL) hasRecipient {
  return !!hasRecipient_;
}
- (void) setHasRecipient:(BOOL) value {
  hasRecipient_ = !!value;
}
@synthesize recipient;
@synthesize mutableNewQuestionsList;
- (void) dealloc {
  self.recipient = nil;
  self.mutableNewQuestionsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.recipient = [BasicUserProto defaultInstance];
  }
  return self;
}
static RetrieveNewQuestionsResponseProto* defaultRetrieveNewQuestionsResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveNewQuestionsResponseProto class]) {
    defaultRetrieveNewQuestionsResponseProtoInstance = [[RetrieveNewQuestionsResponseProto alloc] init];
  }
}
+ (RetrieveNewQuestionsResponseProto*) defaultInstance {
  return defaultRetrieveNewQuestionsResponseProtoInstance;
}
- (RetrieveNewQuestionsResponseProto*) defaultInstance {
  return defaultRetrieveNewQuestionsResponseProtoInstance;
}
- (NSArray*) newQuestionsList {
  return mutableNewQuestionsList;
}
- (QuestionProto*) newQuestionsAtIndex:(int32_t) index {
  id value = [mutableNewQuestionsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRecipient) {
    [output writeMessage:1 value:self.recipient];
  }
  for (QuestionProto* element in self.newQuestionsList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRecipient) {
    size += computeMessageSize(1, self.recipient);
  }
  for (QuestionProto* element in self.newQuestionsList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetrieveNewQuestionsResponseProto*) parseFromData:(NSData*) data {
  return (RetrieveNewQuestionsResponseProto*)[[[RetrieveNewQuestionsResponseProto builder] mergeFromData:data] build];
}
+ (RetrieveNewQuestionsResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveNewQuestionsResponseProto*)[[[RetrieveNewQuestionsResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveNewQuestionsResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveNewQuestionsResponseProto*)[[[RetrieveNewQuestionsResponseProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveNewQuestionsResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveNewQuestionsResponseProto*)[[[RetrieveNewQuestionsResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveNewQuestionsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveNewQuestionsResponseProto*)[[[RetrieveNewQuestionsResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveNewQuestionsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveNewQuestionsResponseProto*)[[[RetrieveNewQuestionsResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveNewQuestionsResponseProto_Builder*) builder {
  return [[[RetrieveNewQuestionsResponseProto_Builder alloc] init] autorelease];
}
+ (RetrieveNewQuestionsResponseProto_Builder*) builderWithPrototype:(RetrieveNewQuestionsResponseProto*) prototype {
  return [[RetrieveNewQuestionsResponseProto builder] mergeFrom:prototype];
}
- (RetrieveNewQuestionsResponseProto_Builder*) builder {
  return [RetrieveNewQuestionsResponseProto builder];
}
@end

BOOL RetrieveNewQuestionsResponseProto_RetrieveNewQuestionsResponseStatusIsValidValue(RetrieveNewQuestionsResponseProto_RetrieveNewQuestionsResponseStatus value) {
  switch (value) {
    case RetrieveNewQuestionsResponseProto_RetrieveNewQuestionsResponseStatusSuccess:
    case RetrieveNewQuestionsResponseProto_RetrieveNewQuestionsResponseStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface RetrieveNewQuestionsResponseProto_Builder()
@property (retain) RetrieveNewQuestionsResponseProto* result;
@end

@implementation RetrieveNewQuestionsResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetrieveNewQuestionsResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveNewQuestionsResponseProto_Builder*) clear {
  self.result = [[[RetrieveNewQuestionsResponseProto alloc] init] autorelease];
  return self;
}
- (RetrieveNewQuestionsResponseProto_Builder*) clone {
  return [RetrieveNewQuestionsResponseProto builderWithPrototype:result];
}
- (RetrieveNewQuestionsResponseProto*) defaultInstance {
  return [RetrieveNewQuestionsResponseProto defaultInstance];
}
- (RetrieveNewQuestionsResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveNewQuestionsResponseProto*) buildPartial {
  RetrieveNewQuestionsResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetrieveNewQuestionsResponseProto_Builder*) mergeFrom:(RetrieveNewQuestionsResponseProto*) other {
  if (other == [RetrieveNewQuestionsResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasRecipient) {
    [self mergeRecipient:other.recipient];
  }
  if (other.mutableNewQuestionsList.count > 0) {
    if (result.mutableNewQuestionsList == nil) {
      result.mutableNewQuestionsList = [NSMutableArray array];
    }
    [result.mutableNewQuestionsList addObjectsFromArray:other.mutableNewQuestionsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveNewQuestionsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveNewQuestionsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BasicUserProto_Builder* subBuilder = [BasicUserProto builder];
        if (self.hasRecipient) {
          [subBuilder mergeFrom:self.recipient];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecipient:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        QuestionProto_Builder* subBuilder = [QuestionProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNewQuestions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRecipient {
  return result.hasRecipient;
}
- (BasicUserProto*) recipient {
  return result.recipient;
}
- (RetrieveNewQuestionsResponseProto_Builder*) setRecipient:(BasicUserProto*) value {
  result.hasRecipient = YES;
  result.recipient = value;
  return self;
}
- (RetrieveNewQuestionsResponseProto_Builder*) setRecipientBuilder:(BasicUserProto_Builder*) builderForValue {
  return [self setRecipient:[builderForValue build]];
}
- (RetrieveNewQuestionsResponseProto_Builder*) mergeRecipient:(BasicUserProto*) value {
  if (result.hasRecipient &&
      result.recipient != [BasicUserProto defaultInstance]) {
    result.recipient =
      [[[BasicUserProto builderWithPrototype:result.recipient] mergeFrom:value] buildPartial];
  } else {
    result.recipient = value;
  }
  result.hasRecipient = YES;
  return self;
}
- (RetrieveNewQuestionsResponseProto_Builder*) clearRecipient {
  result.hasRecipient = NO;
  result.recipient = [BasicUserProto defaultInstance];
  return self;
}
- (NSArray*) newQuestionsList {
  if (result.mutableNewQuestionsList == nil) { return [NSArray array]; }
  return result.mutableNewQuestionsList;
}
- (QuestionProto*) newQuestionsAtIndex:(int32_t) index {
  return [result newQuestionsAtIndex:index];
}
- (RetrieveNewQuestionsResponseProto_Builder*) replaceNewQuestionsAtIndex:(int32_t) index with:(QuestionProto*) value {
  [result.mutableNewQuestionsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RetrieveNewQuestionsResponseProto_Builder*) addAllNewQuestions:(NSArray*) values {
  if (result.mutableNewQuestionsList == nil) {
    result.mutableNewQuestionsList = [NSMutableArray array];
  }
  [result.mutableNewQuestionsList addObjectsFromArray:values];
  return self;
}
- (RetrieveNewQuestionsResponseProto_Builder*) clearNewQuestionsList {
  result.mutableNewQuestionsList = nil;
  return self;
}
- (RetrieveNewQuestionsResponseProto_Builder*) addNewQuestions:(QuestionProto*) value {
  if (result.mutableNewQuestionsList == nil) {
    result.mutableNewQuestionsList = [NSMutableArray array];
  }
  [result.mutableNewQuestionsList addObject:value];
  return self;
}
@end

