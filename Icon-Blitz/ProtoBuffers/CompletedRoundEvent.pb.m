// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "CompletedRoundEvent.pb.h"

@implementation CompletedRoundEventRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [CompletedRoundEventRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [TriviaRoundFormatRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface CompletedRoundRequestProto ()
@property (retain) BasicUserProto* sender;
@property (retain) NSString* gameId;
@property (retain) CompleteRoundResultsProto* results;
@end

@implementation CompletedRoundRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasGameId {
  return !!hasGameId_;
}
- (void) setHasGameId:(BOOL) value {
  hasGameId_ = !!value;
}
@synthesize gameId;
- (BOOL) hasResults {
  return !!hasResults_;
}
- (void) setHasResults:(BOOL) value {
  hasResults_ = !!value;
}
@synthesize results;
- (void) dealloc {
  self.sender = nil;
  self.gameId = nil;
  self.results = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [BasicUserProto defaultInstance];
    self.gameId = @"";
    self.results = [CompleteRoundResultsProto defaultInstance];
  }
  return self;
}
static CompletedRoundRequestProto* defaultCompletedRoundRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [CompletedRoundRequestProto class]) {
    defaultCompletedRoundRequestProtoInstance = [[CompletedRoundRequestProto alloc] init];
  }
}
+ (CompletedRoundRequestProto*) defaultInstance {
  return defaultCompletedRoundRequestProtoInstance;
}
- (CompletedRoundRequestProto*) defaultInstance {
  return defaultCompletedRoundRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasGameId) {
    [output writeString:2 value:self.gameId];
  }
  if (self.hasResults) {
    [output writeMessage:3 value:self.results];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasGameId) {
    size += computeStringSize(2, self.gameId);
  }
  if (self.hasResults) {
    size += computeMessageSize(3, self.results);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CompletedRoundRequestProto*) parseFromData:(NSData*) data {
  return (CompletedRoundRequestProto*)[[[CompletedRoundRequestProto builder] mergeFromData:data] build];
}
+ (CompletedRoundRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompletedRoundRequestProto*)[[[CompletedRoundRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CompletedRoundRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (CompletedRoundRequestProto*)[[[CompletedRoundRequestProto builder] mergeFromInputStream:input] build];
}
+ (CompletedRoundRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompletedRoundRequestProto*)[[[CompletedRoundRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompletedRoundRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CompletedRoundRequestProto*)[[[CompletedRoundRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (CompletedRoundRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompletedRoundRequestProto*)[[[CompletedRoundRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompletedRoundRequestProto_Builder*) builder {
  return [[[CompletedRoundRequestProto_Builder alloc] init] autorelease];
}
+ (CompletedRoundRequestProto_Builder*) builderWithPrototype:(CompletedRoundRequestProto*) prototype {
  return [[CompletedRoundRequestProto builder] mergeFrom:prototype];
}
- (CompletedRoundRequestProto_Builder*) builder {
  return [CompletedRoundRequestProto builder];
}
@end

@interface CompletedRoundRequestProto_Builder()
@property (retain) CompletedRoundRequestProto* result;
@end

@implementation CompletedRoundRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CompletedRoundRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CompletedRoundRequestProto_Builder*) clear {
  self.result = [[[CompletedRoundRequestProto alloc] init] autorelease];
  return self;
}
- (CompletedRoundRequestProto_Builder*) clone {
  return [CompletedRoundRequestProto builderWithPrototype:result];
}
- (CompletedRoundRequestProto*) defaultInstance {
  return [CompletedRoundRequestProto defaultInstance];
}
- (CompletedRoundRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CompletedRoundRequestProto*) buildPartial {
  CompletedRoundRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CompletedRoundRequestProto_Builder*) mergeFrom:(CompletedRoundRequestProto*) other {
  if (other == [CompletedRoundRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasGameId) {
    [self setGameId:other.gameId];
  }
  if (other.hasResults) {
    [self mergeResults:other.results];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CompletedRoundRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CompletedRoundRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BasicUserProto_Builder* subBuilder = [BasicUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setGameId:[input readString]];
        break;
      }
      case 26: {
        CompleteRoundResultsProto_Builder* subBuilder = [CompleteRoundResultsProto builder];
        if (self.hasResults) {
          [subBuilder mergeFrom:self.results];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setResults:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (BasicUserProto*) sender {
  return result.sender;
}
- (CompletedRoundRequestProto_Builder*) setSender:(BasicUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (CompletedRoundRequestProto_Builder*) setSenderBuilder:(BasicUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (CompletedRoundRequestProto_Builder*) mergeSender:(BasicUserProto*) value {
  if (result.hasSender &&
      result.sender != [BasicUserProto defaultInstance]) {
    result.sender =
      [[[BasicUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (CompletedRoundRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [BasicUserProto defaultInstance];
  return self;
}
- (BOOL) hasGameId {
  return result.hasGameId;
}
- (NSString*) gameId {
  return result.gameId;
}
- (CompletedRoundRequestProto_Builder*) setGameId:(NSString*) value {
  result.hasGameId = YES;
  result.gameId = value;
  return self;
}
- (CompletedRoundRequestProto_Builder*) clearGameId {
  result.hasGameId = NO;
  result.gameId = @"";
  return self;
}
- (BOOL) hasResults {
  return result.hasResults;
}
- (CompleteRoundResultsProto*) results {
  return result.results;
}
- (CompletedRoundRequestProto_Builder*) setResults:(CompleteRoundResultsProto*) value {
  result.hasResults = YES;
  result.results = value;
  return self;
}
- (CompletedRoundRequestProto_Builder*) setResultsBuilder:(CompleteRoundResultsProto_Builder*) builderForValue {
  return [self setResults:[builderForValue build]];
}
- (CompletedRoundRequestProto_Builder*) mergeResults:(CompleteRoundResultsProto*) value {
  if (result.hasResults &&
      result.results != [CompleteRoundResultsProto defaultInstance]) {
    result.results =
      [[[CompleteRoundResultsProto builderWithPrototype:result.results] mergeFrom:value] buildPartial];
  } else {
    result.results = value;
  }
  result.hasResults = YES;
  return self;
}
- (CompletedRoundRequestProto_Builder*) clearResults {
  result.hasResults = NO;
  result.results = [CompleteRoundResultsProto defaultInstance];
  return self;
}
@end

@interface CompletedRoundResponseProto ()
@property (retain) BasicUserProto* recipient;
@property (retain) NSString* gameId;
@property (retain) BasicRoundResultsProto* results;
@property CompletedRoundResponseProto_CompletedRoundStatus status;
@end

@implementation CompletedRoundResponseProto

- (BOOL) hasRecipient {
  return !!hasRecipient_;
}
- (void) setHasRecipient:(BOOL) value {
  hasRecipient_ = !!value;
}
@synthesize recipient;
- (BOOL) hasGameId {
  return !!hasGameId_;
}
- (void) setHasGameId:(BOOL) value {
  hasGameId_ = !!value;
}
@synthesize gameId;
- (BOOL) hasResults {
  return !!hasResults_;
}
- (void) setHasResults:(BOOL) value {
  hasResults_ = !!value;
}
@synthesize results;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.recipient = nil;
  self.gameId = nil;
  self.results = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.recipient = [BasicUserProto defaultInstance];
    self.gameId = @"";
    self.results = [BasicRoundResultsProto defaultInstance];
    self.status = CompletedRoundResponseProto_CompletedRoundStatusSuccess;
  }
  return self;
}
static CompletedRoundResponseProto* defaultCompletedRoundResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [CompletedRoundResponseProto class]) {
    defaultCompletedRoundResponseProtoInstance = [[CompletedRoundResponseProto alloc] init];
  }
}
+ (CompletedRoundResponseProto*) defaultInstance {
  return defaultCompletedRoundResponseProtoInstance;
}
- (CompletedRoundResponseProto*) defaultInstance {
  return defaultCompletedRoundResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRecipient) {
    [output writeMessage:1 value:self.recipient];
  }
  if (self.hasGameId) {
    [output writeString:2 value:self.gameId];
  }
  if (self.hasResults) {
    [output writeMessage:3 value:self.results];
  }
  if (self.hasStatus) {
    [output writeEnum:4 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRecipient) {
    size += computeMessageSize(1, self.recipient);
  }
  if (self.hasGameId) {
    size += computeStringSize(2, self.gameId);
  }
  if (self.hasResults) {
    size += computeMessageSize(3, self.results);
  }
  if (self.hasStatus) {
    size += computeEnumSize(4, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CompletedRoundResponseProto*) parseFromData:(NSData*) data {
  return (CompletedRoundResponseProto*)[[[CompletedRoundResponseProto builder] mergeFromData:data] build];
}
+ (CompletedRoundResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompletedRoundResponseProto*)[[[CompletedRoundResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CompletedRoundResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (CompletedRoundResponseProto*)[[[CompletedRoundResponseProto builder] mergeFromInputStream:input] build];
}
+ (CompletedRoundResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompletedRoundResponseProto*)[[[CompletedRoundResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompletedRoundResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CompletedRoundResponseProto*)[[[CompletedRoundResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (CompletedRoundResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompletedRoundResponseProto*)[[[CompletedRoundResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompletedRoundResponseProto_Builder*) builder {
  return [[[CompletedRoundResponseProto_Builder alloc] init] autorelease];
}
+ (CompletedRoundResponseProto_Builder*) builderWithPrototype:(CompletedRoundResponseProto*) prototype {
  return [[CompletedRoundResponseProto builder] mergeFrom:prototype];
}
- (CompletedRoundResponseProto_Builder*) builder {
  return [CompletedRoundResponseProto builder];
}
@end

BOOL CompletedRoundResponseProto_CompletedRoundStatusIsValidValue(CompletedRoundResponseProto_CompletedRoundStatus value) {
  switch (value) {
    case CompletedRoundResponseProto_CompletedRoundStatusSuccess:
    case CompletedRoundResponseProto_CompletedRoundStatusFailGameDoesNotExist:
    case CompletedRoundResponseProto_CompletedRoundStatusFailGameAlreadyCompleted:
    case CompletedRoundResponseProto_CompletedRoundStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface CompletedRoundResponseProto_Builder()
@property (retain) CompletedRoundResponseProto* result;
@end

@implementation CompletedRoundResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CompletedRoundResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CompletedRoundResponseProto_Builder*) clear {
  self.result = [[[CompletedRoundResponseProto alloc] init] autorelease];
  return self;
}
- (CompletedRoundResponseProto_Builder*) clone {
  return [CompletedRoundResponseProto builderWithPrototype:result];
}
- (CompletedRoundResponseProto*) defaultInstance {
  return [CompletedRoundResponseProto defaultInstance];
}
- (CompletedRoundResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CompletedRoundResponseProto*) buildPartial {
  CompletedRoundResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CompletedRoundResponseProto_Builder*) mergeFrom:(CompletedRoundResponseProto*) other {
  if (other == [CompletedRoundResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasRecipient) {
    [self mergeRecipient:other.recipient];
  }
  if (other.hasGameId) {
    [self setGameId:other.gameId];
  }
  if (other.hasResults) {
    [self mergeResults:other.results];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CompletedRoundResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CompletedRoundResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BasicUserProto_Builder* subBuilder = [BasicUserProto builder];
        if (self.hasRecipient) {
          [subBuilder mergeFrom:self.recipient];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRecipient:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setGameId:[input readString]];
        break;
      }
      case 26: {
        BasicRoundResultsProto_Builder* subBuilder = [BasicRoundResultsProto builder];
        if (self.hasResults) {
          [subBuilder mergeFrom:self.results];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setResults:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (CompletedRoundResponseProto_CompletedRoundStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasRecipient {
  return result.hasRecipient;
}
- (BasicUserProto*) recipient {
  return result.recipient;
}
- (CompletedRoundResponseProto_Builder*) setRecipient:(BasicUserProto*) value {
  result.hasRecipient = YES;
  result.recipient = value;
  return self;
}
- (CompletedRoundResponseProto_Builder*) setRecipientBuilder:(BasicUserProto_Builder*) builderForValue {
  return [self setRecipient:[builderForValue build]];
}
- (CompletedRoundResponseProto_Builder*) mergeRecipient:(BasicUserProto*) value {
  if (result.hasRecipient &&
      result.recipient != [BasicUserProto defaultInstance]) {
    result.recipient =
      [[[BasicUserProto builderWithPrototype:result.recipient] mergeFrom:value] buildPartial];
  } else {
    result.recipient = value;
  }
  result.hasRecipient = YES;
  return self;
}
- (CompletedRoundResponseProto_Builder*) clearRecipient {
  result.hasRecipient = NO;
  result.recipient = [BasicUserProto defaultInstance];
  return self;
}
- (BOOL) hasGameId {
  return result.hasGameId;
}
- (NSString*) gameId {
  return result.gameId;
}
- (CompletedRoundResponseProto_Builder*) setGameId:(NSString*) value {
  result.hasGameId = YES;
  result.gameId = value;
  return self;
}
- (CompletedRoundResponseProto_Builder*) clearGameId {
  result.hasGameId = NO;
  result.gameId = @"";
  return self;
}
- (BOOL) hasResults {
  return result.hasResults;
}
- (BasicRoundResultsProto*) results {
  return result.results;
}
- (CompletedRoundResponseProto_Builder*) setResults:(BasicRoundResultsProto*) value {
  result.hasResults = YES;
  result.results = value;
  return self;
}
- (CompletedRoundResponseProto_Builder*) setResultsBuilder:(BasicRoundResultsProto_Builder*) builderForValue {
  return [self setResults:[builderForValue build]];
}
- (CompletedRoundResponseProto_Builder*) mergeResults:(BasicRoundResultsProto*) value {
  if (result.hasResults &&
      result.results != [BasicRoundResultsProto defaultInstance]) {
    result.results =
      [[[BasicRoundResultsProto builderWithPrototype:result.results] mergeFrom:value] buildPartial];
  } else {
    result.results = value;
  }
  result.hasResults = YES;
  return self;
}
- (CompletedRoundResponseProto_Builder*) clearResults {
  result.hasResults = NO;
  result.results = [BasicRoundResultsProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (CompletedRoundResponseProto_CompletedRoundStatus) status {
  return result.status;
}
- (CompletedRoundResponseProto_Builder*) setStatus:(CompletedRoundResponseProto_CompletedRoundStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (CompletedRoundResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = CompletedRoundResponseProto_CompletedRoundStatusSuccess;
  return self;
}
@end

